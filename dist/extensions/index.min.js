/*! For license information please see index.min.js.LICENSE.txt */
var publisher;!function(){var e={117:function(e,t,n){"use strict";var r=n(307),a=n(444);const i=(0,r.createElement)(a.SVG,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},(0,r.createElement)(a.Path,{d:"M18 11.2h-5.2V6h-1.6v5.2H6v1.6h5.2V18h1.6v-5.2H18z"}));t.Z=i},526:function(e,t,n){"use strict";var r=n(307),a=n(444);const i=(0,r.createElement)(a.SVG,{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24"},(0,r.createElement)(a.Path,{d:"M7 11.5h10V13H7z"}));t.Z=i},515:function(e,t,n){"use strict";n.d(t,{componentClassNames:function(){return l},controlClassNames:function(){return c},extensionClassNames:function(){return u}});var r=n(184),a=n.n(r),i=(n(819),JSON.parse('{"publisher-core":true,"control":true}')),o=JSON.parse('{"publisher-core":true,"component":true}'),s=JSON.parse('{"publisher-core":true,"extension":true}');function c(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return a()(i,t)}function l(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return a()(o,t)}function u(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return a()(s,t)}},930:function(e,t,n){"use strict";n.d(t,{Button:function(){return Un},HStack:function(){return Yn},Icon:function(){return Fn},InspectElement:function(){return Vn},VStack:function(){return Zn}});var r=n(462),a=n(307),i=n(609);function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){u(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e){return c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},c(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function u(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function f(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null==n)return;var r,a,i=[],o=!0,s=!1;try{for(n=n.call(e);!(o=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);o=!0);}catch(e){s=!0,a=e}finally{try{o||null==n.return||n.return()}finally{if(s)throw a}}return i}(e,t)||p(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function m(e){return function(e){if(Array.isArray(e))return d(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||p(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function p(e,t){if(e){if("string"==typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?d(e,t):void 0}}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var b=function(){},v={},h={},g=null,y={mark:b,measure:b};try{"undefined"!=typeof window&&(v=window),"undefined"!=typeof document&&(h=document),"undefined"!=typeof MutationObserver&&(g=MutationObserver),"undefined"!=typeof performance&&(y=performance)}catch(e){}var x,k,w,E,O,S=(v.navigator||{}).userAgent,C=void 0===S?"":S,_=v,N=h,P=g,A=y,I=(_.document,!!N.documentElement&&!!N.head&&"function"==typeof N.addEventListener&&"function"==typeof N.createElement),j=~C.indexOf("MSIE")||~C.indexOf("Trident/"),B="___FONT_AWESOME___",z=16,M="fa",T="svg-inline--fa",D="data-fa-i2svg",R="data-fa-pseudo-element",F="data-fa-pseudo-element-pending",L="data-prefix",U="data-icon",Z="fontawesome-i2svg",Y="async",$=["HTML","HEAD","STYLE","SCRIPT"],V=function(){try{return!0}catch(e){return!1}}(),H="classic",W="sharp",G=[H,W];function X(e){return new Proxy(e,{get:function(e,t){return t in e?e[t]:e[H]}})}var K=X((u(x={},H,{fa:"solid",fas:"solid","fa-solid":"solid",far:"regular","fa-regular":"regular",fal:"light","fa-light":"light",fat:"thin","fa-thin":"thin",fad:"duotone","fa-duotone":"duotone",fab:"brands","fa-brands":"brands",fak:"kit","fa-kit":"kit"}),u(x,W,{fa:"solid",fass:"solid","fa-solid":"solid",fasr:"regular","fa-regular":"regular",fasl:"light","fa-light":"light"}),x)),q=X((u(k={},H,{solid:"fas",regular:"far",light:"fal",thin:"fat",duotone:"fad",brands:"fab",kit:"fak"}),u(k,W,{solid:"fass",regular:"fasr",light:"fasl"}),k)),J=X((u(w={},H,{fab:"fa-brands",fad:"fa-duotone",fak:"fa-kit",fal:"fa-light",far:"fa-regular",fas:"fa-solid",fat:"fa-thin"}),u(w,W,{fass:"fa-solid",fasr:"fa-regular",fasl:"fa-light"}),w)),Q=X((u(E={},H,{"fa-brands":"fab","fa-duotone":"fad","fa-kit":"fak","fa-light":"fal","fa-regular":"far","fa-solid":"fas","fa-thin":"fat"}),u(E,W,{"fa-solid":"fass","fa-regular":"fasr","fa-light":"fasl"}),E)),ee=/fa(s|r|l|t|d|b|k|ss|sr|sl)?[\-\ ]/,te="fa-layers-text",ne=/Font ?Awesome ?([56 ]*)(Solid|Regular|Light|Thin|Duotone|Brands|Free|Pro|Sharp|Kit)?.*/i,re=X((u(O={},H,{900:"fas",400:"far",normal:"far",300:"fal",100:"fat"}),u(O,W,{900:"fass",400:"fasr",300:"fasl"}),O)),ae=[1,2,3,4,5,6,7,8,9,10],ie=ae.concat([11,12,13,14,15,16,17,18,19,20]),oe=["class","data-prefix","data-icon","data-fa-transform","data-fa-mask"],se={GROUP:"duotone-group",SWAP_OPACITY:"swap-opacity",PRIMARY:"primary",SECONDARY:"secondary"},ce=new Set;Object.keys(q[H]).map(ce.add.bind(ce)),Object.keys(q[W]).map(ce.add.bind(ce));var le=[].concat(G,m(ce),["2xs","xs","sm","lg","xl","2xl","beat","border","fade","beat-fade","bounce","flip-both","flip-horizontal","flip-vertical","flip","fw","inverse","layers-counter","layers-text","layers","li","pull-left","pull-right","pulse","rotate-180","rotate-270","rotate-90","rotate-by","shake","spin-pulse","spin-reverse","spin","stack-1x","stack-2x","stack","ul",se.GROUP,se.SWAP_OPACITY,se.PRIMARY,se.SECONDARY]).concat(ae.map((function(e){return"".concat(e,"x")}))).concat(ie.map((function(e){return"w-".concat(e)}))),ue=_.FontAwesomeConfig||{};if(N&&"function"==typeof N.querySelector){[["data-family-prefix","familyPrefix"],["data-css-prefix","cssPrefix"],["data-family-default","familyDefault"],["data-style-default","styleDefault"],["data-replacement-class","replacementClass"],["data-auto-replace-svg","autoReplaceSvg"],["data-auto-add-css","autoAddCss"],["data-auto-a11y","autoA11y"],["data-search-pseudo-elements","searchPseudoElements"],["data-observe-mutations","observeMutations"],["data-mutate-approach","mutateApproach"],["data-keep-original-source","keepOriginalSource"],["data-measure-performance","measurePerformance"],["data-show-missing-icons","showMissingIcons"]].forEach((function(e){var t=f(e,2),n=t[0],r=t[1],a=function(e){return""===e||"false"!==e&&("true"===e||e)}(function(e){var t=N.querySelector("script["+e+"]");if(t)return t.getAttribute(e)}(n));null!=a&&(ue[r]=a)}))}var fe={styleDefault:"solid",familyDefault:"classic",cssPrefix:M,replacementClass:T,autoReplaceSvg:!0,autoAddCss:!0,autoA11y:!0,searchPseudoElements:!1,observeMutations:!0,mutateApproach:"async",keepOriginalSource:!0,measurePerformance:!1,showMissingIcons:!0};ue.familyPrefix&&(ue.cssPrefix=ue.familyPrefix);var me=s(s({},fe),ue);me.autoReplaceSvg||(me.observeMutations=!1);var pe={};Object.keys(fe).forEach((function(e){Object.defineProperty(pe,e,{enumerable:!0,set:function(t){me[e]=t,de.forEach((function(e){return e(pe)}))},get:function(){return me[e]}})})),Object.defineProperty(pe,"familyPrefix",{enumerable:!0,set:function(e){me.cssPrefix=e,de.forEach((function(e){return e(pe)}))},get:function(){return me.cssPrefix}}),_.FontAwesomeConfig=pe;var de=[];var be=z,ve={size:16,x:0,y:0,rotate:0,flipX:!1,flipY:!1};var he="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";function ge(){for(var e=12,t="";e-- >0;)t+=he[62*Math.random()|0];return t}function ye(e){for(var t=[],n=(e||[]).length>>>0;n--;)t[n]=e[n];return t}function xe(e){return e.classList?ye(e.classList):(e.getAttribute("class")||"").split(" ").filter((function(e){return e}))}function ke(e){return"".concat(e).replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}function we(e){return Object.keys(e||{}).reduce((function(t,n){return t+"".concat(n,": ").concat(e[n].trim(),";")}),"")}function Ee(e){return e.size!==ve.size||e.x!==ve.x||e.y!==ve.y||e.rotate!==ve.rotate||e.flipX||e.flipY}var Oe=':root, :host {\n  --fa-font-solid: normal 900 1em/1 "Font Awesome 6 Solid";\n  --fa-font-regular: normal 400 1em/1 "Font Awesome 6 Regular";\n  --fa-font-light: normal 300 1em/1 "Font Awesome 6 Light";\n  --fa-font-thin: normal 100 1em/1 "Font Awesome 6 Thin";\n  --fa-font-duotone: normal 900 1em/1 "Font Awesome 6 Duotone";\n  --fa-font-sharp-solid: normal 900 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-regular: normal 400 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-sharp-light: normal 300 1em/1 "Font Awesome 6 Sharp";\n  --fa-font-brands: normal 400 1em/1 "Font Awesome 6 Brands";\n}\n\nsvg:not(:root).svg-inline--fa, svg:not(:host).svg-inline--fa {\n  overflow: visible;\n  box-sizing: content-box;\n}\n\n.svg-inline--fa {\n  display: var(--fa-display, inline-block);\n  height: 1em;\n  overflow: visible;\n  vertical-align: -0.125em;\n}\n.svg-inline--fa.fa-2xs {\n  vertical-align: 0.1em;\n}\n.svg-inline--fa.fa-xs {\n  vertical-align: 0em;\n}\n.svg-inline--fa.fa-sm {\n  vertical-align: -0.0714285705em;\n}\n.svg-inline--fa.fa-lg {\n  vertical-align: -0.2em;\n}\n.svg-inline--fa.fa-xl {\n  vertical-align: -0.25em;\n}\n.svg-inline--fa.fa-2xl {\n  vertical-align: -0.3125em;\n}\n.svg-inline--fa.fa-pull-left {\n  margin-right: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-pull-right {\n  margin-left: var(--fa-pull-margin, 0.3em);\n  width: auto;\n}\n.svg-inline--fa.fa-li {\n  width: var(--fa-li-width, 2em);\n  top: 0.25em;\n}\n.svg-inline--fa.fa-fw {\n  width: var(--fa-fw-width, 1.25em);\n}\n\n.fa-layers svg.svg-inline--fa {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n}\n\n.fa-layers-counter, .fa-layers-text {\n  display: inline-block;\n  position: absolute;\n  text-align: center;\n}\n\n.fa-layers {\n  display: inline-block;\n  height: 1em;\n  position: relative;\n  text-align: center;\n  vertical-align: -0.125em;\n  width: 1em;\n}\n.fa-layers svg.svg-inline--fa {\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-text {\n  left: 50%;\n  top: 50%;\n  -webkit-transform: translate(-50%, -50%);\n          transform: translate(-50%, -50%);\n  -webkit-transform-origin: center center;\n          transform-origin: center center;\n}\n\n.fa-layers-counter {\n  background-color: var(--fa-counter-background-color, #ff253a);\n  border-radius: var(--fa-counter-border-radius, 1em);\n  box-sizing: border-box;\n  color: var(--fa-inverse, #fff);\n  line-height: var(--fa-counter-line-height, 1);\n  max-width: var(--fa-counter-max-width, 5em);\n  min-width: var(--fa-counter-min-width, 1.5em);\n  overflow: hidden;\n  padding: var(--fa-counter-padding, 0.25em 0.5em);\n  right: var(--fa-right, 0);\n  text-overflow: ellipsis;\n  top: var(--fa-top, 0);\n  -webkit-transform: scale(var(--fa-counter-scale, 0.25));\n          transform: scale(var(--fa-counter-scale, 0.25));\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-bottom-right {\n  bottom: var(--fa-bottom, 0);\n  right: var(--fa-right, 0);\n  top: auto;\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: bottom right;\n          transform-origin: bottom right;\n}\n\n.fa-layers-bottom-left {\n  bottom: var(--fa-bottom, 0);\n  left: var(--fa-left, 0);\n  right: auto;\n  top: auto;\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: bottom left;\n          transform-origin: bottom left;\n}\n\n.fa-layers-top-right {\n  top: var(--fa-top, 0);\n  right: var(--fa-right, 0);\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: top right;\n          transform-origin: top right;\n}\n\n.fa-layers-top-left {\n  left: var(--fa-left, 0);\n  right: auto;\n  top: var(--fa-top, 0);\n  -webkit-transform: scale(var(--fa-layers-scale, 0.25));\n          transform: scale(var(--fa-layers-scale, 0.25));\n  -webkit-transform-origin: top left;\n          transform-origin: top left;\n}\n\n.fa-1x {\n  font-size: 1em;\n}\n\n.fa-2x {\n  font-size: 2em;\n}\n\n.fa-3x {\n  font-size: 3em;\n}\n\n.fa-4x {\n  font-size: 4em;\n}\n\n.fa-5x {\n  font-size: 5em;\n}\n\n.fa-6x {\n  font-size: 6em;\n}\n\n.fa-7x {\n  font-size: 7em;\n}\n\n.fa-8x {\n  font-size: 8em;\n}\n\n.fa-9x {\n  font-size: 9em;\n}\n\n.fa-10x {\n  font-size: 10em;\n}\n\n.fa-2xs {\n  font-size: 0.625em;\n  line-height: 0.1em;\n  vertical-align: 0.225em;\n}\n\n.fa-xs {\n  font-size: 0.75em;\n  line-height: 0.0833333337em;\n  vertical-align: 0.125em;\n}\n\n.fa-sm {\n  font-size: 0.875em;\n  line-height: 0.0714285718em;\n  vertical-align: 0.0535714295em;\n}\n\n.fa-lg {\n  font-size: 1.25em;\n  line-height: 0.05em;\n  vertical-align: -0.075em;\n}\n\n.fa-xl {\n  font-size: 1.5em;\n  line-height: 0.0416666682em;\n  vertical-align: -0.125em;\n}\n\n.fa-2xl {\n  font-size: 2em;\n  line-height: 0.03125em;\n  vertical-align: -0.1875em;\n}\n\n.fa-fw {\n  text-align: center;\n  width: 1.25em;\n}\n\n.fa-ul {\n  list-style-type: none;\n  margin-left: var(--fa-li-margin, 2.5em);\n  padding-left: 0;\n}\n.fa-ul > li {\n  position: relative;\n}\n\n.fa-li {\n  left: calc(var(--fa-li-width, 2em) * -1);\n  position: absolute;\n  text-align: center;\n  width: var(--fa-li-width, 2em);\n  line-height: inherit;\n}\n\n.fa-border {\n  border-color: var(--fa-border-color, #eee);\n  border-radius: var(--fa-border-radius, 0.1em);\n  border-style: var(--fa-border-style, solid);\n  border-width: var(--fa-border-width, 0.08em);\n  padding: var(--fa-border-padding, 0.2em 0.25em 0.15em);\n}\n\n.fa-pull-left {\n  float: left;\n  margin-right: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-pull-right {\n  float: right;\n  margin-left: var(--fa-pull-margin, 0.3em);\n}\n\n.fa-beat {\n  -webkit-animation-name: fa-beat;\n          animation-name: fa-beat;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);\n          animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-bounce {\n  -webkit-animation-name: fa-bounce;\n          animation-name: fa-bounce;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.28, 0.84, 0.42, 1));\n}\n\n.fa-fade {\n  -webkit-animation-name: fa-fade;\n          animation-name: fa-fade;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-beat-fade {\n  -webkit-animation-name: fa-beat-fade;\n          animation-name: fa-beat-fade;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n          animation-timing-function: var(--fa-animation-timing, cubic-bezier(0.4, 0, 0.6, 1));\n}\n\n.fa-flip {\n  -webkit-animation-name: fa-flip;\n          animation-name: fa-flip;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, ease-in-out);\n          animation-timing-function: var(--fa-animation-timing, ease-in-out);\n}\n\n.fa-shake {\n  -webkit-animation-name: fa-shake;\n          animation-name: fa-shake;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, linear);\n          animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin {\n  -webkit-animation-name: fa-spin;\n          animation-name: fa-spin;\n  -webkit-animation-delay: var(--fa-animation-delay, 0s);\n          animation-delay: var(--fa-animation-delay, 0s);\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 2s);\n          animation-duration: var(--fa-animation-duration, 2s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, linear);\n          animation-timing-function: var(--fa-animation-timing, linear);\n}\n\n.fa-spin-reverse {\n  --fa-animation-direction: reverse;\n}\n\n.fa-pulse,\n.fa-spin-pulse {\n  -webkit-animation-name: fa-spin;\n          animation-name: fa-spin;\n  -webkit-animation-direction: var(--fa-animation-direction, normal);\n          animation-direction: var(--fa-animation-direction, normal);\n  -webkit-animation-duration: var(--fa-animation-duration, 1s);\n          animation-duration: var(--fa-animation-duration, 1s);\n  -webkit-animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n          animation-iteration-count: var(--fa-animation-iteration-count, infinite);\n  -webkit-animation-timing-function: var(--fa-animation-timing, steps(8));\n          animation-timing-function: var(--fa-animation-timing, steps(8));\n}\n\n@media (prefers-reduced-motion: reduce) {\n  .fa-beat,\n.fa-bounce,\n.fa-fade,\n.fa-beat-fade,\n.fa-flip,\n.fa-pulse,\n.fa-shake,\n.fa-spin,\n.fa-spin-pulse {\n    -webkit-animation-delay: -1ms;\n            animation-delay: -1ms;\n    -webkit-animation-duration: 1ms;\n            animation-duration: 1ms;\n    -webkit-animation-iteration-count: 1;\n            animation-iteration-count: 1;\n    -webkit-transition-delay: 0s;\n            transition-delay: 0s;\n    -webkit-transition-duration: 0s;\n            transition-duration: 0s;\n  }\n}\n@-webkit-keyframes fa-beat {\n  0%, 90% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  45% {\n    -webkit-transform: scale(var(--fa-beat-scale, 1.25));\n            transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@keyframes fa-beat {\n  0%, 90% {\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  45% {\n    -webkit-transform: scale(var(--fa-beat-scale, 1.25));\n            transform: scale(var(--fa-beat-scale, 1.25));\n  }\n}\n@-webkit-keyframes fa-bounce {\n  0% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n}\n@keyframes fa-bounce {\n  0% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  10% {\n    -webkit-transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n            transform: scale(var(--fa-bounce-start-scale-x, 1.1), var(--fa-bounce-start-scale-y, 0.9)) translateY(0);\n  }\n  30% {\n    -webkit-transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n            transform: scale(var(--fa-bounce-jump-scale-x, 0.9), var(--fa-bounce-jump-scale-y, 1.1)) translateY(var(--fa-bounce-height, -0.5em));\n  }\n  50% {\n    -webkit-transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n            transform: scale(var(--fa-bounce-land-scale-x, 1.05), var(--fa-bounce-land-scale-y, 0.95)) translateY(0);\n  }\n  57% {\n    -webkit-transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n            transform: scale(1, 1) translateY(var(--fa-bounce-rebound, -0.125em));\n  }\n  64% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n  100% {\n    -webkit-transform: scale(1, 1) translateY(0);\n            transform: scale(1, 1) translateY(0);\n  }\n}\n@-webkit-keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@keyframes fa-fade {\n  50% {\n    opacity: var(--fa-fade-opacity, 0.4);\n  }\n}\n@-webkit-keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));\n            transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@keyframes fa-beat-fade {\n  0%, 100% {\n    opacity: var(--fa-beat-fade-opacity, 0.4);\n    -webkit-transform: scale(1);\n            transform: scale(1);\n  }\n  50% {\n    opacity: 1;\n    -webkit-transform: scale(var(--fa-beat-fade-scale, 1.125));\n            transform: scale(var(--fa-beat-fade-scale, 1.125));\n  }\n}\n@-webkit-keyframes fa-flip {\n  50% {\n    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@keyframes fa-flip {\n  50% {\n    -webkit-transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n            transform: rotate3d(var(--fa-flip-x, 0), var(--fa-flip-y, 1), var(--fa-flip-z, 0), var(--fa-flip-angle, -180deg));\n  }\n}\n@-webkit-keyframes fa-shake {\n  0% {\n    -webkit-transform: rotate(-15deg);\n            transform: rotate(-15deg);\n  }\n  4% {\n    -webkit-transform: rotate(15deg);\n            transform: rotate(15deg);\n  }\n  8%, 24% {\n    -webkit-transform: rotate(-18deg);\n            transform: rotate(-18deg);\n  }\n  12%, 28% {\n    -webkit-transform: rotate(18deg);\n            transform: rotate(18deg);\n  }\n  16% {\n    -webkit-transform: rotate(-22deg);\n            transform: rotate(-22deg);\n  }\n  20% {\n    -webkit-transform: rotate(22deg);\n            transform: rotate(22deg);\n  }\n  32% {\n    -webkit-transform: rotate(-12deg);\n            transform: rotate(-12deg);\n  }\n  36% {\n    -webkit-transform: rotate(12deg);\n            transform: rotate(12deg);\n  }\n  40%, 100% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n}\n@keyframes fa-shake {\n  0% {\n    -webkit-transform: rotate(-15deg);\n            transform: rotate(-15deg);\n  }\n  4% {\n    -webkit-transform: rotate(15deg);\n            transform: rotate(15deg);\n  }\n  8%, 24% {\n    -webkit-transform: rotate(-18deg);\n            transform: rotate(-18deg);\n  }\n  12%, 28% {\n    -webkit-transform: rotate(18deg);\n            transform: rotate(18deg);\n  }\n  16% {\n    -webkit-transform: rotate(-22deg);\n            transform: rotate(-22deg);\n  }\n  20% {\n    -webkit-transform: rotate(22deg);\n            transform: rotate(22deg);\n  }\n  32% {\n    -webkit-transform: rotate(-12deg);\n            transform: rotate(-12deg);\n  }\n  36% {\n    -webkit-transform: rotate(12deg);\n            transform: rotate(12deg);\n  }\n  40%, 100% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n}\n@-webkit-keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n@keyframes fa-spin {\n  0% {\n    -webkit-transform: rotate(0deg);\n            transform: rotate(0deg);\n  }\n  100% {\n    -webkit-transform: rotate(360deg);\n            transform: rotate(360deg);\n  }\n}\n.fa-rotate-90 {\n  -webkit-transform: rotate(90deg);\n          transform: rotate(90deg);\n}\n\n.fa-rotate-180 {\n  -webkit-transform: rotate(180deg);\n          transform: rotate(180deg);\n}\n\n.fa-rotate-270 {\n  -webkit-transform: rotate(270deg);\n          transform: rotate(270deg);\n}\n\n.fa-flip-horizontal {\n  -webkit-transform: scale(-1, 1);\n          transform: scale(-1, 1);\n}\n\n.fa-flip-vertical {\n  -webkit-transform: scale(1, -1);\n          transform: scale(1, -1);\n}\n\n.fa-flip-both,\n.fa-flip-horizontal.fa-flip-vertical {\n  -webkit-transform: scale(-1, -1);\n          transform: scale(-1, -1);\n}\n\n.fa-rotate-by {\n  -webkit-transform: rotate(var(--fa-rotate-angle, none));\n          transform: rotate(var(--fa-rotate-angle, none));\n}\n\n.fa-stack {\n  display: inline-block;\n  vertical-align: middle;\n  height: 2em;\n  position: relative;\n  width: 2.5em;\n}\n\n.fa-stack-1x,\n.fa-stack-2x {\n  bottom: 0;\n  left: 0;\n  margin: auto;\n  position: absolute;\n  right: 0;\n  top: 0;\n  z-index: var(--fa-stack-z-index, auto);\n}\n\n.svg-inline--fa.fa-stack-1x {\n  height: 1em;\n  width: 1.25em;\n}\n.svg-inline--fa.fa-stack-2x {\n  height: 2em;\n  width: 2.5em;\n}\n\n.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}\n\n.sr-only,\n.fa-sr-only {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.sr-only-focusable:not(:focus),\n.fa-sr-only-focusable:not(:focus) {\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  margin: -1px;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border-width: 0;\n}\n\n.svg-inline--fa .fa-primary {\n  fill: var(--fa-primary-color, currentColor);\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa .fa-secondary {\n  fill: var(--fa-secondary-color, currentColor);\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-primary {\n  opacity: var(--fa-secondary-opacity, 0.4);\n}\n\n.svg-inline--fa.fa-swap-opacity .fa-secondary {\n  opacity: var(--fa-primary-opacity, 1);\n}\n\n.svg-inline--fa mask .fa-primary,\n.svg-inline--fa mask .fa-secondary {\n  fill: black;\n}\n\n.fad.fa-inverse,\n.fa-duotone.fa-inverse {\n  color: var(--fa-inverse, #fff);\n}';function Se(){var e=M,t=T,n=pe.cssPrefix,r=pe.replacementClass,a=Oe;if(n!==e||r!==t){var i=new RegExp("\\.".concat(e,"\\-"),"g"),o=new RegExp("\\--".concat(e,"\\-"),"g"),s=new RegExp("\\.".concat(t),"g");a=a.replace(i,".".concat(n,"-")).replace(o,"--".concat(n,"-")).replace(s,".".concat(r))}return a}var Ce=!1;function _e(){pe.autoAddCss&&!Ce&&(!function(e){if(e&&I){var t=N.createElement("style");t.setAttribute("type","text/css"),t.innerHTML=e;for(var n=N.head.childNodes,r=null,a=n.length-1;a>-1;a--){var i=n[a],o=(i.tagName||"").toUpperCase();["STYLE","LINK"].indexOf(o)>-1&&(r=i)}N.head.insertBefore(t,r)}}(Se()),Ce=!0)}var Ne={mixout:function(){return{dom:{css:Se,insertCss:_e}}},hooks:function(){return{beforeDOMElementCreation:function(){_e()},beforeI2svg:function(){_e()}}}},Pe=_||{};Pe[B]||(Pe[B]={}),Pe[B].styles||(Pe[B].styles={}),Pe[B].hooks||(Pe[B].hooks={}),Pe[B].shims||(Pe[B].shims=[]);var Ae=Pe[B],Ie=[],je=!1;function Be(e){var t=e.tag,n=e.attributes,r=void 0===n?{}:n,a=e.children,i=void 0===a?[]:a;return"string"==typeof e?ke(e):"<".concat(t," ").concat(function(e){return Object.keys(e||{}).reduce((function(t,n){return t+"".concat(n,'="').concat(ke(e[n]),'" ')}),"").trim()}(r),">").concat(i.map(Be).join(""),"</").concat(t,">")}function ze(e,t,n){if(e&&e[t]&&e[t][n])return{prefix:t,iconName:n,icon:e[t][n]}}I&&((je=(N.documentElement.doScroll?/^loaded|^c/:/^loaded|^i|^c/).test(N.readyState))||N.addEventListener("DOMContentLoaded",(function e(){N.removeEventListener("DOMContentLoaded",e),je=1,Ie.map((function(e){return e()}))})));var Me=function(e,t,n,r){var a,i,o,s=Object.keys(e),c=s.length,l=void 0!==r?function(e,t){return function(n,r,a,i){return e.call(t,n,r,a,i)}}(t,r):t;for(void 0===n?(a=1,o=e[s[0]]):(a=0,o=n);a<c;a++)o=l(o,e[i=s[a]],i,e);return o};function Te(e){var t=function(e){for(var t=[],n=0,r=e.length;n<r;){var a=e.charCodeAt(n++);if(a>=55296&&a<=56319&&n<r){var i=e.charCodeAt(n++);56320==(64512&i)?t.push(((1023&a)<<10)+(1023&i)+65536):(t.push(a),n--)}else t.push(a)}return t}(e);return 1===t.length?t[0].toString(16):null}function De(e){return Object.keys(e).reduce((function(t,n){var r=e[n];return!!r.icon?t[r.iconName]=r.icon:t[n]=r,t}),{})}function Re(e,t){var n=(arguments.length>2&&void 0!==arguments[2]?arguments[2]:{}).skipHooks,r=void 0!==n&&n,a=De(t);"function"!=typeof Ae.hooks.addPack||r?Ae.styles[e]=s(s({},Ae.styles[e]||{}),a):Ae.hooks.addPack(e,De(t)),"fas"===e&&Re("fa",t)}var Fe,Le,Ue,Ze=Ae.styles,Ye=Ae.shims,$e=(u(Fe={},H,Object.values(J[H])),u(Fe,W,Object.values(J[W])),Fe),Ve=null,He={},We={},Ge={},Xe={},Ke={},qe=(u(Le={},H,Object.keys(K[H])),u(Le,W,Object.keys(K[W])),Le);function Je(e,t){var n,r=t.split("-"),a=r[0],i=r.slice(1).join("-");return a!==e||""===i||(n=i,~le.indexOf(n))?null:i}var Qe,et=function(){var e=function(e){return Me(Ze,(function(t,n,r){return t[r]=Me(n,e,{}),t}),{})};He=e((function(e,t,n){(t[3]&&(e[t[3]]=n),t[2])&&t[2].filter((function(e){return"number"==typeof e})).forEach((function(t){e[t.toString(16)]=n}));return e})),We=e((function(e,t,n){(e[n]=n,t[2])&&t[2].filter((function(e){return"string"==typeof e})).forEach((function(t){e[t]=n}));return e})),Ke=e((function(e,t,n){var r=t[2];return e[n]=n,r.forEach((function(t){e[t]=n})),e}));var t="far"in Ze||pe.autoFetchSvg,n=Me(Ye,(function(e,n){var r=n[0],a=n[1],i=n[2];return"far"!==a||t||(a="fas"),"string"==typeof r&&(e.names[r]={prefix:a,iconName:i}),"number"==typeof r&&(e.unicodes[r.toString(16)]={prefix:a,iconName:i}),e}),{names:{},unicodes:{}});Ge=n.names,Xe=n.unicodes,Ve=ot(pe.styleDefault,{family:pe.familyDefault})};function tt(e,t){return(He[e]||{})[t]}function nt(e,t){return(Ke[e]||{})[t]}function rt(e){return Ge[e]||{prefix:null,iconName:null}}function at(){return Ve}Qe=function(e){Ve=ot(e.styleDefault,{family:pe.familyDefault})},de.push(Qe),et();var it=function(){return{prefix:null,iconName:null,rest:[]}};function ot(e){var t=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).family,n=void 0===t?H:t,r=K[n][e],a=q[n][e]||q[n][r],i=e in Ae.styles?e:null;return a||i||null}var st=(u(Ue={},H,Object.keys(J[H])),u(Ue,W,Object.keys(J[W])),Ue);function ct(e){var t,n=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).skipLookups,r=void 0!==n&&n,a=(u(t={},H,"".concat(pe.cssPrefix,"-").concat(H)),u(t,W,"".concat(pe.cssPrefix,"-").concat(W)),t),i=null,o=H;(e.includes(a[H])||e.some((function(e){return st[H].includes(e)})))&&(o=H),(e.includes(a[W])||e.some((function(e){return st[W].includes(e)})))&&(o=W);var s=e.reduce((function(e,t){var n=Je(pe.cssPrefix,t);if(Ze[t]?(t=$e[o].includes(t)?Q[o][t]:t,i=t,e.prefix=t):qe[o].indexOf(t)>-1?(i=t,e.prefix=ot(t,{family:o})):n?e.iconName=n:t!==pe.replacementClass&&t!==a[H]&&t!==a[W]&&e.rest.push(t),!r&&e.prefix&&e.iconName){var s="fa"===i?rt(e.iconName):{},c=nt(e.prefix,e.iconName);s.prefix&&(i=null),e.iconName=s.iconName||c||e.iconName,e.prefix=s.prefix||e.prefix,"far"!==e.prefix||Ze.far||!Ze.fas||pe.autoFetchSvg||(e.prefix="fas")}return e}),it());return(e.includes("fa-brands")||e.includes("fab"))&&(s.prefix="fab"),(e.includes("fa-duotone")||e.includes("fad"))&&(s.prefix="fad"),s.prefix||o!==W||!Ze.fass&&!pe.autoFetchSvg||(s.prefix="fass",s.iconName=nt(s.prefix,s.iconName)||s.iconName),"fa"!==s.prefix&&"fa"!==i||(s.prefix=at()||"fas"),s}var lt=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.definitions={}}var t,n,r;return t=e,n=[{key:"add",value:function(){for(var e=this,t=arguments.length,n=new Array(t),r=0;r<t;r++)n[r]=arguments[r];var a=n.reduce(this._pullDefinitions,{});Object.keys(a).forEach((function(t){e.definitions[t]=s(s({},e.definitions[t]||{}),a[t]),Re(t,a[t]);var n=J[H][t];n&&Re(n,a[t]),et()}))}},{key:"reset",value:function(){this.definitions={}}},{key:"_pullDefinitions",value:function(e,t){var n=t.prefix&&t.iconName&&t.icon?{0:t}:t;return Object.keys(n).map((function(t){var r=n[t],a=r.prefix,i=r.iconName,o=r.icon,s=o[2];e[a]||(e[a]={}),s.length>0&&s.forEach((function(t){"string"==typeof t&&(e[a][t]=o)})),e[a][i]=o})),e}}],n&&l(t.prototype,n),r&&l(t,r),Object.defineProperty(t,"prototype",{writable:!1}),e}(),ut=[],ft={},mt={},pt=Object.keys(mt);function dt(e,t){for(var n=arguments.length,r=new Array(n>2?n-2:0),a=2;a<n;a++)r[a-2]=arguments[a];return(ft[e]||[]).forEach((function(e){t=e.apply(null,[t].concat(r))})),t}function bt(e){for(var t=arguments.length,n=new Array(t>1?t-1:0),r=1;r<t;r++)n[r-1]=arguments[r];(ft[e]||[]).forEach((function(e){e.apply(null,n)}))}function vt(){var e=arguments[0],t=Array.prototype.slice.call(arguments,1);return mt[e]?mt[e].apply(null,t):void 0}function ht(e){"fa"===e.prefix&&(e.prefix="fas");var t=e.iconName,n=e.prefix||at();if(t)return t=nt(n,t)||t,ze(gt.definitions,n,t)||ze(Ae.styles,n,t)}var gt=new lt,yt={i2svg:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};return I?(bt("beforeI2svg",e),vt("pseudoElements2svg",e),vt("i2svg",e)):Promise.reject("Operation requires a DOM of some kind.")},watch:function(){var e,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},n=t.autoReplaceSvgRoot;!1===pe.autoReplaceSvg&&(pe.autoReplaceSvg=!0),pe.observeMutations=!0,e=function(){kt({autoReplaceSvgRoot:n}),bt("watch",t)},I&&(je?setTimeout(e,0):Ie.push(e))}},xt={noAuto:function(){pe.autoReplaceSvg=!1,pe.observeMutations=!1,bt("noAuto")},config:pe,dom:yt,parse:{icon:function(e){if(null===e)return null;if("object"===c(e)&&e.prefix&&e.iconName)return{prefix:e.prefix,iconName:nt(e.prefix,e.iconName)||e.iconName};if(Array.isArray(e)&&2===e.length){var t=0===e[1].indexOf("fa-")?e[1].slice(3):e[1],n=ot(e[0]);return{prefix:n,iconName:nt(n,t)||t}}if("string"==typeof e&&(e.indexOf("".concat(pe.cssPrefix,"-"))>-1||e.match(ee))){var r=ct(e.split(" "),{skipLookups:!0});return{prefix:r.prefix||at(),iconName:nt(r.prefix,r.iconName)||r.iconName}}if("string"==typeof e){var a=at();return{prefix:a,iconName:nt(a,e)||e}}}},library:gt,findIconDefinition:ht,toHtml:Be},kt=function(){var e=(arguments.length>0&&void 0!==arguments[0]?arguments[0]:{}).autoReplaceSvgRoot,t=void 0===e?N:e;(Object.keys(Ae.styles).length>0||pe.autoFetchSvg)&&I&&pe.autoReplaceSvg&&xt.dom.i2svg({node:t})};function wt(e,t){return Object.defineProperty(e,"abstract",{get:t}),Object.defineProperty(e,"html",{get:function(){return e.abstract.map((function(e){return Be(e)}))}}),Object.defineProperty(e,"node",{get:function(){if(I){var t=N.createElement("div");return t.innerHTML=e.html,t.children}}}),e}function Et(e){var t=e.icons,n=t.main,r=t.mask,a=e.prefix,i=e.iconName,o=e.transform,c=e.symbol,l=e.title,u=e.maskId,f=e.titleId,m=e.extra,p=e.watchable,d=void 0!==p&&p,b=r.found?r:n,v=b.width,h=b.height,g="fak"===a,y=[pe.replacementClass,i?"".concat(pe.cssPrefix,"-").concat(i):""].filter((function(e){return-1===m.classes.indexOf(e)})).filter((function(e){return""!==e||!!e})).concat(m.classes).join(" "),x={children:[],attributes:s(s({},m.attributes),{},{"data-prefix":a,"data-icon":i,class:y,role:m.attributes.role||"img",xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 ".concat(v," ").concat(h)})},k=g&&!~m.classes.indexOf("fa-fw")?{width:"".concat(v/h*16*.0625,"em")}:{};d&&(x.attributes[D]=""),l&&(x.children.push({tag:"title",attributes:{id:x.attributes["aria-labelledby"]||"title-".concat(f||ge())},children:[l]}),delete x.attributes.title);var w=s(s({},x),{},{prefix:a,iconName:i,main:n,mask:r,maskId:u,transform:o,symbol:c,styles:s(s({},k),m.styles)}),E=r.found&&n.found?vt("generateAbstractMask",w)||{children:[],attributes:{}}:vt("generateAbstractIcon",w)||{children:[],attributes:{}},O=E.children,S=E.attributes;return w.children=O,w.attributes=S,c?function(e){var t=e.prefix,n=e.iconName,r=e.children,a=e.attributes,i=e.symbol,o=!0===i?"".concat(t,"-").concat(pe.cssPrefix,"-").concat(n):i;return[{tag:"svg",attributes:{style:"display: none;"},children:[{tag:"symbol",attributes:s(s({},a),{},{id:o}),children:r}]}]}(w):function(e){var t=e.children,n=e.main,r=e.mask,a=e.attributes,i=e.styles,o=e.transform;if(Ee(o)&&n.found&&!r.found){var c={x:n.width/n.height/2,y:.5};a.style=we(s(s({},i),{},{"transform-origin":"".concat(c.x+o.x/16,"em ").concat(c.y+o.y/16,"em")}))}return[{tag:"svg",attributes:a,children:t}]}(w)}function Ot(e){var t=e.content,n=e.width,r=e.height,a=e.transform,i=e.title,o=e.extra,c=e.watchable,l=void 0!==c&&c,u=s(s(s({},o.attributes),i?{title:i}:{}),{},{class:o.classes.join(" ")});l&&(u[D]="");var f=s({},o.styles);Ee(a)&&(f.transform=function(e){var t=e.transform,n=e.width,r=void 0===n?z:n,a=e.height,i=void 0===a?z:a,o=e.startCentered,s=void 0!==o&&o,c="";return c+=s&&j?"translate(".concat(t.x/be-r/2,"em, ").concat(t.y/be-i/2,"em) "):s?"translate(calc(-50% + ".concat(t.x/be,"em), calc(-50% + ").concat(t.y/be,"em)) "):"translate(".concat(t.x/be,"em, ").concat(t.y/be,"em) "),c+="scale(".concat(t.size/be*(t.flipX?-1:1),", ").concat(t.size/be*(t.flipY?-1:1),") "),c+"rotate(".concat(t.rotate,"deg) ")}({transform:a,startCentered:!0,width:n,height:r}),f["-webkit-transform"]=f.transform);var m=we(f);m.length>0&&(u.style=m);var p=[];return p.push({tag:"span",attributes:u,children:[t]}),i&&p.push({tag:"span",attributes:{class:"sr-only"},children:[i]}),p}var St=Ae.styles;function Ct(e){var t=e[0],n=e[1],r=f(e.slice(4),1)[0];return{found:!0,width:t,height:n,icon:Array.isArray(r)?{tag:"g",attributes:{class:"".concat(pe.cssPrefix,"-").concat(se.GROUP)},children:[{tag:"path",attributes:{class:"".concat(pe.cssPrefix,"-").concat(se.SECONDARY),fill:"currentColor",d:r[0]}},{tag:"path",attributes:{class:"".concat(pe.cssPrefix,"-").concat(se.PRIMARY),fill:"currentColor",d:r[1]}}]}:{tag:"path",attributes:{fill:"currentColor",d:r}}}}var _t={found:!1,width:512,height:512};function Nt(e,t){var n=t;return"fa"===t&&null!==pe.styleDefault&&(t=at()),new Promise((function(r,a){vt("missingIconAbstract");if("fa"===n){var i=rt(e)||{};e=i.iconName||e,t=i.prefix||t}if(e&&t&&St[t]&&St[t][e])return r(Ct(St[t][e]));!function(e,t){V||pe.showMissingIcons||!e||console.error('Icon with name "'.concat(e,'" and prefix "').concat(t,'" is missing.'))}(e,t),r(s(s({},_t),{},{icon:pe.showMissingIcons&&e&&vt("missingIconAbstract")||{}}))}))}var Pt=function(){},At=pe.measurePerformance&&A&&A.mark&&A.measure?A:{mark:Pt,measure:Pt},It='FA "6.4.0"',jt=function(e){At.mark("".concat(It," ").concat(e," ends")),At.measure("".concat(It," ").concat(e),"".concat(It," ").concat(e," begins"),"".concat(It," ").concat(e," ends"))},Bt={begin:function(e){return At.mark("".concat(It," ").concat(e," begins")),function(){return jt(e)}},end:jt},zt=function(){};function Mt(e){return"string"==typeof(e.getAttribute?e.getAttribute(D):null)}function Tt(e){return N.createElementNS("http://www.w3.org/2000/svg",e)}function Dt(e){return N.createElement(e)}function Rt(e){var t=(arguments.length>1&&void 0!==arguments[1]?arguments[1]:{}).ceFn,n=void 0===t?"svg"===e.tag?Tt:Dt:t;if("string"==typeof e)return N.createTextNode(e);var r=n(e.tag);return Object.keys(e.attributes||[]).forEach((function(t){r.setAttribute(t,e.attributes[t])})),(e.children||[]).forEach((function(e){r.appendChild(Rt(e,{ceFn:n}))})),r}var Ft={replace:function(e){var t=e[0];if(t.parentNode)if(e[1].forEach((function(e){t.parentNode.insertBefore(Rt(e),t)})),null===t.getAttribute(D)&&pe.keepOriginalSource){var n=N.createComment(function(e){var t=" ".concat(e.outerHTML," ");return"".concat(t,"Font Awesome fontawesome.com ")}(t));t.parentNode.replaceChild(n,t)}else t.remove()},nest:function(e){var t=e[0],n=e[1];if(~xe(t).indexOf(pe.replacementClass))return Ft.replace(e);var r=new RegExp("".concat(pe.cssPrefix,"-.*"));if(delete n[0].attributes.id,n[0].attributes.class){var a=n[0].attributes.class.split(" ").reduce((function(e,t){return t===pe.replacementClass||t.match(r)?e.toSvg.push(t):e.toNode.push(t),e}),{toNode:[],toSvg:[]});n[0].attributes.class=a.toSvg.join(" "),0===a.toNode.length?t.removeAttribute("class"):t.setAttribute("class",a.toNode.join(" "))}var i=n.map((function(e){return Be(e)})).join("\n");t.setAttribute(D,""),t.innerHTML=i}};function Lt(e){e()}function Ut(e,t){var n="function"==typeof t?t:zt;if(0===e.length)n();else{var r=Lt;pe.mutateApproach===Y&&(r=_.requestAnimationFrame||Lt),r((function(){var t=!0===pe.autoReplaceSvg?Ft.replace:Ft[pe.autoReplaceSvg]||Ft.replace,r=Bt.begin("mutate");e.map(t),r(),n()}))}}var Zt=!1;function Yt(){Zt=!0}function $t(){Zt=!1}var Vt=null;function Ht(e){if(P&&pe.observeMutations){var t=e.treeCallback,n=void 0===t?zt:t,r=e.nodeCallback,a=void 0===r?zt:r,i=e.pseudoElementsCallback,o=void 0===i?zt:i,s=e.observeMutationsRoot,c=void 0===s?N:s;Vt=new P((function(e){if(!Zt){var t=at();ye(e).forEach((function(e){if("childList"===e.type&&e.addedNodes.length>0&&!Mt(e.addedNodes[0])&&(pe.searchPseudoElements&&o(e.target),n(e.target)),"attributes"===e.type&&e.target.parentNode&&pe.searchPseudoElements&&o(e.target.parentNode),"attributes"===e.type&&Mt(e.target)&&~oe.indexOf(e.attributeName))if("class"===e.attributeName&&function(e){var t=e.getAttribute?e.getAttribute(L):null,n=e.getAttribute?e.getAttribute(U):null;return t&&n}(e.target)){var r=ct(xe(e.target)),i=r.prefix,s=r.iconName;e.target.setAttribute(L,i||t),s&&e.target.setAttribute(U,s)}else(c=e.target)&&c.classList&&c.classList.contains&&c.classList.contains(pe.replacementClass)&&a(e.target);var c}))}})),I&&Vt.observe(c,{childList:!0,attributes:!0,characterData:!0,subtree:!0})}}function Wt(e){var t,n,r=e.getAttribute("data-prefix"),a=e.getAttribute("data-icon"),i=void 0!==e.innerText?e.innerText.trim():"",o=ct(xe(e));return o.prefix||(o.prefix=at()),r&&a&&(o.prefix=r,o.iconName=a),o.iconName&&o.prefix||(o.prefix&&i.length>0&&(o.iconName=(t=o.prefix,n=e.innerText,(We[t]||{})[n]||tt(o.prefix,Te(e.innerText)))),!o.iconName&&pe.autoFetchSvg&&e.firstChild&&e.firstChild.nodeType===Node.TEXT_NODE&&(o.iconName=e.firstChild.data)),o}function Gt(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{styleParser:!0},n=Wt(e),r=n.iconName,a=n.prefix,i=n.rest,o=function(e){var t=ye(e.attributes).reduce((function(e,t){return"class"!==e.name&&"style"!==e.name&&(e[t.name]=t.value),e}),{}),n=e.getAttribute("title"),r=e.getAttribute("data-fa-title-id");return pe.autoA11y&&(n?t["aria-labelledby"]="".concat(pe.replacementClass,"-title-").concat(r||ge()):(t["aria-hidden"]="true",t.focusable="false")),t}(e),c=dt("parseNodeAttributes",{},e),l=t.styleParser?function(e){var t=e.getAttribute("style"),n=[];return t&&(n=t.split(";").reduce((function(e,t){var n=t.split(":"),r=n[0],a=n.slice(1);return r&&a.length>0&&(e[r]=a.join(":").trim()),e}),{})),n}(e):[];return s({iconName:r,title:e.getAttribute("title"),titleId:e.getAttribute("data-fa-title-id"),prefix:a,transform:ve,mask:{iconName:null,prefix:null,rest:[]},maskId:null,symbol:!1,extra:{classes:i,styles:l,attributes:o}},c)}var Xt=Ae.styles;function Kt(e){var t="nest"===pe.autoReplaceSvg?Gt(e,{styleParser:!1}):Gt(e);return~t.extra.classes.indexOf(te)?vt("generateLayersText",e,t):vt("generateSvgReplacementMutation",e,t)}var qt=new Set;function Jt(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(!I)return Promise.resolve();var n=N.documentElement.classList,r=function(e){return n.add("".concat(Z,"-").concat(e))},a=function(e){return n.remove("".concat(Z,"-").concat(e))},i=pe.autoFetchSvg?qt:G.map((function(e){return"fa-".concat(e)})).concat(Object.keys(Xt));i.includes("fa")||i.push("fa");var o=[".".concat(te,":not([").concat(D,"])")].concat(i.map((function(e){return".".concat(e,":not([").concat(D,"])")}))).join(", ");if(0===o.length)return Promise.resolve();var s=[];try{s=ye(e.querySelectorAll(o))}catch(e){}if(!(s.length>0))return Promise.resolve();r("pending"),a("complete");var c=Bt.begin("onTree"),l=s.reduce((function(e,t){try{var n=Kt(t);n&&e.push(n)}catch(e){V||"MissingIcon"===e.name&&console.error(e)}return e}),[]);return new Promise((function(e,n){Promise.all(l).then((function(n){Ut(n,(function(){r("active"),r("complete"),a("pending"),"function"==typeof t&&t(),c(),e()}))})).catch((function(e){c(),n(e)}))}))}function Qt(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;Kt(e).then((function(e){e&&Ut([e],t)}))}G.map((function(e){qt.add("fa-".concat(e))})),Object.keys(K[H]).map(qt.add.bind(qt)),Object.keys(K[W]).map(qt.add.bind(qt)),qt=m(qt);var en=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.transform,r=void 0===n?ve:n,a=t.symbol,i=void 0!==a&&a,o=t.mask,c=void 0===o?null:o,l=t.maskId,u=void 0===l?null:l,f=t.title,m=void 0===f?null:f,p=t.titleId,d=void 0===p?null:p,b=t.classes,v=void 0===b?[]:b,h=t.attributes,g=void 0===h?{}:h,y=t.styles,x=void 0===y?{}:y;if(e){var k=e.prefix,w=e.iconName,E=e.icon;return wt(s({type:"icon"},e),(function(){return bt("beforeDOMElementCreation",{iconDefinition:e,params:t}),pe.autoA11y&&(m?g["aria-labelledby"]="".concat(pe.replacementClass,"-title-").concat(d||ge()):(g["aria-hidden"]="true",g.focusable="false")),Et({icons:{main:Ct(E),mask:c?Ct(c.icon):{found:!1,width:null,height:null,icon:{}}},prefix:k,iconName:w,transform:s(s({},ve),r),symbol:i,title:m,maskId:u,titleId:d,extra:{attributes:g,styles:x,classes:v}})}))}},tn={mixout:function(){return{icon:(e=en,function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},r=(t||{}).icon?t:ht(t||{}),a=n.mask;return a&&(a=(a||{}).icon?a:ht(a||{})),e(r,s(s({},n),{},{mask:a}))})};var e},hooks:function(){return{mutationObserverCallbacks:function(e){return e.treeCallback=Jt,e.nodeCallback=Qt,e}}},provides:function(e){e.i2svg=function(e){var t=e.node,n=void 0===t?N:t,r=e.callback;return Jt(n,void 0===r?function(){}:r)},e.generateSvgReplacementMutation=function(e,t){var n=t.iconName,r=t.title,a=t.titleId,i=t.prefix,o=t.transform,s=t.symbol,c=t.mask,l=t.maskId,u=t.extra;return new Promise((function(t,m){Promise.all([Nt(n,i),c.iconName?Nt(c.iconName,c.prefix):Promise.resolve({found:!1,width:512,height:512,icon:{}})]).then((function(c){var m=f(c,2),p=m[0],d=m[1];t([e,Et({icons:{main:p,mask:d},prefix:i,iconName:n,transform:o,symbol:s,maskId:l,title:r,titleId:a,extra:u,watchable:!0})])})).catch(m)}))},e.generateAbstractIcon=function(e){var t,n=e.children,r=e.attributes,a=e.main,i=e.transform,o=we(e.styles);return o.length>0&&(r.style=o),Ee(i)&&(t=vt("generateAbstractTransformGrouping",{main:a,transform:i,containerWidth:a.width,iconWidth:a.width})),n.push(t||a.icon),{children:n,attributes:r}}}},nn={mixout:function(){return{layer:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.classes,r=void 0===n?[]:n;return wt({type:"layer"},(function(){bt("beforeDOMElementCreation",{assembler:e,params:t});var n=[];return e((function(e){Array.isArray(e)?e.map((function(e){n=n.concat(e.abstract)})):n=n.concat(e.abstract)})),[{tag:"span",attributes:{class:["".concat(pe.cssPrefix,"-layers")].concat(m(r)).join(" ")},children:n}]}))}}}},rn={mixout:function(){return{counter:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.title,r=void 0===n?null:n,a=t.classes,i=void 0===a?[]:a,o=t.attributes,c=void 0===o?{}:o,l=t.styles,u=void 0===l?{}:l;return wt({type:"counter",content:e},(function(){return bt("beforeDOMElementCreation",{content:e,params:t}),function(e){var t=e.content,n=e.title,r=e.extra,a=s(s(s({},r.attributes),n?{title:n}:{}),{},{class:r.classes.join(" ")}),i=we(r.styles);i.length>0&&(a.style=i);var o=[];return o.push({tag:"span",attributes:a,children:[t]}),n&&o.push({tag:"span",attributes:{class:"sr-only"},children:[n]}),o}({content:e.toString(),title:r,extra:{attributes:c,styles:u,classes:["".concat(pe.cssPrefix,"-layers-counter")].concat(m(i))}})}))}}}},an={mixout:function(){return{text:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n=t.transform,r=void 0===n?ve:n,a=t.title,i=void 0===a?null:a,o=t.classes,c=void 0===o?[]:o,l=t.attributes,u=void 0===l?{}:l,f=t.styles,p=void 0===f?{}:f;return wt({type:"text",content:e},(function(){return bt("beforeDOMElementCreation",{content:e,params:t}),Ot({content:e,transform:s(s({},ve),r),title:i,extra:{attributes:u,styles:p,classes:["".concat(pe.cssPrefix,"-layers-text")].concat(m(c))}})}))}}},provides:function(e){e.generateLayersText=function(e,t){var n=t.title,r=t.transform,a=t.extra,i=null,o=null;if(j){var s=parseInt(getComputedStyle(e).fontSize,10),c=e.getBoundingClientRect();i=c.width/s,o=c.height/s}return pe.autoA11y&&!n&&(a.attributes["aria-hidden"]="true"),Promise.resolve([e,Ot({content:e.innerHTML,width:i,height:o,transform:r,title:n,extra:a,watchable:!0})])}}},on=new RegExp('"',"ug"),sn=[1105920,1112319];function cn(e,t){var n="".concat(F).concat(t.replace(":","-"));return new Promise((function(r,a){if(null!==e.getAttribute(n))return r();var i,o,c,l=ye(e.children).filter((function(e){return e.getAttribute(R)===t}))[0],u=_.getComputedStyle(e,t),f=u.getPropertyValue("font-family").match(ne),m=u.getPropertyValue("font-weight"),p=u.getPropertyValue("content");if(l&&!f)return e.removeChild(l),r();if(f&&"none"!==p&&""!==p){var d=u.getPropertyValue("content"),b=~["Sharp"].indexOf(f[2])?W:H,v=~["Solid","Regular","Light","Thin","Duotone","Brands","Kit"].indexOf(f[2])?q[b][f[2].toLowerCase()]:re[b][m],h=function(e){var t,n,r,a,i,o=e.replace(on,""),s=(n=0,a=(t=o).length,(i=t.charCodeAt(n))>=55296&&i<=56319&&a>n+1&&(r=t.charCodeAt(n+1))>=56320&&r<=57343?1024*(i-55296)+r-56320+65536:i),c=s>=sn[0]&&s<=sn[1],l=2===o.length&&o[0]===o[1];return{value:Te(l?o[0]:o),isSecondary:c||l}}(d),g=h.value,y=h.isSecondary,x=f[0].startsWith("FontAwesome"),k=tt(v,g),w=k;if(x){var E=(o=Xe[i=g],c=tt("fas",i),o||(c?{prefix:"fas",iconName:c}:null)||{prefix:null,iconName:null});E.iconName&&E.prefix&&(k=E.iconName,v=E.prefix)}if(!k||y||l&&l.getAttribute(L)===v&&l.getAttribute(U)===w)r();else{e.setAttribute(n,w),l&&e.removeChild(l);var O={iconName:null,title:null,titleId:null,prefix:null,transform:ve,symbol:!1,mask:{iconName:null,prefix:null,rest:[]},maskId:null,extra:{classes:[],styles:{},attributes:{}}},S=O.extra;S.attributes[R]=t,Nt(k,v).then((function(a){var i=Et(s(s({},O),{},{icons:{main:a,mask:it()},prefix:v,iconName:w,extra:S,watchable:!0})),o=N.createElement("svg");"::before"===t?e.insertBefore(o,e.firstChild):e.appendChild(o),o.outerHTML=i.map((function(e){return Be(e)})).join("\n"),e.removeAttribute(n),r()})).catch(a)}}else r()}))}function ln(e){return Promise.all([cn(e,"::before"),cn(e,"::after")])}function un(e){return!(e.parentNode===document.head||~$.indexOf(e.tagName.toUpperCase())||e.getAttribute(R)||e.parentNode&&"svg"===e.parentNode.tagName)}function fn(e){if(I)return new Promise((function(t,n){var r=ye(e.querySelectorAll("*")).filter(un).map(ln),a=Bt.begin("searchPseudoElements");Yt(),Promise.all(r).then((function(){a(),$t(),t()})).catch((function(){a(),$t(),n()}))}))}var mn=!1,pn=function(e){return e.toLowerCase().split(" ").reduce((function(e,t){var n=t.toLowerCase().split("-"),r=n[0],a=n.slice(1).join("-");if(r&&"h"===a)return e.flipX=!0,e;if(r&&"v"===a)return e.flipY=!0,e;if(a=parseFloat(a),isNaN(a))return e;switch(r){case"grow":e.size=e.size+a;break;case"shrink":e.size=e.size-a;break;case"left":e.x=e.x-a;break;case"right":e.x=e.x+a;break;case"up":e.y=e.y-a;break;case"down":e.y=e.y+a;break;case"rotate":e.rotate=e.rotate+a}return e}),{size:16,x:0,y:0,flipX:!1,flipY:!1,rotate:0})},dn={mixout:function(){return{parse:{transform:function(e){return pn(e)}}}},hooks:function(){return{parseNodeAttributes:function(e,t){var n=t.getAttribute("data-fa-transform");return n&&(e.transform=pn(n)),e}}},provides:function(e){e.generateAbstractTransformGrouping=function(e){var t=e.main,n=e.transform,r=e.containerWidth,a=e.iconWidth,i={transform:"translate(".concat(r/2," 256)")},o="translate(".concat(32*n.x,", ").concat(32*n.y,") "),c="scale(".concat(n.size/16*(n.flipX?-1:1),", ").concat(n.size/16*(n.flipY?-1:1),") "),l="rotate(".concat(n.rotate," 0 0)"),u={outer:i,inner:{transform:"".concat(o," ").concat(c," ").concat(l)},path:{transform:"translate(".concat(a/2*-1," -256)")}};return{tag:"g",attributes:s({},u.outer),children:[{tag:"g",attributes:s({},u.inner),children:[{tag:t.icon.tag,children:t.icon.children,attributes:s(s({},t.icon.attributes),u.path)}]}]}}}},bn={x:0,y:0,width:"100%",height:"100%"};function vn(e){var t=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];return e.attributes&&(e.attributes.fill||t)&&(e.attributes.fill="black"),e}var hn={hooks:function(){return{parseNodeAttributes:function(e,t){var n=t.getAttribute("data-fa-mask"),r=n?ct(n.split(" ").map((function(e){return e.trim()}))):it();return r.prefix||(r.prefix=at()),e.mask=r,e.maskId=t.getAttribute("data-fa-mask-id"),e}}},provides:function(e){e.generateAbstractMask=function(e){var t,n=e.children,r=e.attributes,a=e.main,i=e.mask,o=e.maskId,c=e.transform,l=a.width,u=a.icon,f=i.width,m=i.icon,p=function(e){var t=e.transform,n=e.containerWidth,r=e.iconWidth,a={transform:"translate(".concat(n/2," 256)")},i="translate(".concat(32*t.x,", ").concat(32*t.y,") "),o="scale(".concat(t.size/16*(t.flipX?-1:1),", ").concat(t.size/16*(t.flipY?-1:1),") "),s="rotate(".concat(t.rotate," 0 0)");return{outer:a,inner:{transform:"".concat(i," ").concat(o," ").concat(s)},path:{transform:"translate(".concat(r/2*-1," -256)")}}}({transform:c,containerWidth:f,iconWidth:l}),d={tag:"rect",attributes:s(s({},bn),{},{fill:"white"})},b=u.children?{children:u.children.map(vn)}:{},v={tag:"g",attributes:s({},p.inner),children:[vn(s({tag:u.tag,attributes:s(s({},u.attributes),p.path)},b))]},h={tag:"g",attributes:s({},p.outer),children:[v]},g="mask-".concat(o||ge()),y="clip-".concat(o||ge()),x={tag:"mask",attributes:s(s({},bn),{},{id:g,maskUnits:"userSpaceOnUse",maskContentUnits:"userSpaceOnUse"}),children:[d,h]},k={tag:"defs",children:[{tag:"clipPath",attributes:{id:y},children:(t=m,"g"===t.tag?t.children:[t])},x]};return n.push(k,{tag:"rect",attributes:s({fill:"currentColor","clip-path":"url(#".concat(y,")"),mask:"url(#".concat(g,")")},bn)}),{children:n,attributes:r}}}},gn={provides:function(e){var t=!1;_.matchMedia&&(t=_.matchMedia("(prefers-reduced-motion: reduce)").matches),e.missingIconAbstract=function(){var e=[],n={fill:"currentColor"},r={attributeType:"XML",repeatCount:"indefinite",dur:"2s"};e.push({tag:"path",attributes:s(s({},n),{},{d:"M156.5,447.7l-12.6,29.5c-18.7-9.5-35.9-21.2-51.5-34.9l22.7-22.7C127.6,430.5,141.5,440,156.5,447.7z M40.6,272H8.5 c1.4,21.2,5.4,41.7,11.7,61.1L50,321.2C45.1,305.5,41.8,289,40.6,272z M40.6,240c1.4-18.8,5.2-37,11.1-54.1l-29.5-12.6 C14.7,194.3,10,216.7,8.5,240H40.6z M64.3,156.5c7.8-14.9,17.2-28.8,28.1-41.5L69.7,92.3c-13.7,15.6-25.5,32.8-34.9,51.5 L64.3,156.5z M397,419.6c-13.9,12-29.4,22.3-46.1,30.4l11.9,29.8c20.7-9.9,39.8-22.6,56.9-37.6L397,419.6z M115,92.4 c13.9-12,29.4-22.3,46.1-30.4l-11.9-29.8c-20.7,9.9-39.8,22.6-56.8,37.6L115,92.4z M447.7,355.5c-7.8,14.9-17.2,28.8-28.1,41.5 l22.7,22.7c13.7-15.6,25.5-32.9,34.9-51.5L447.7,355.5z M471.4,272c-1.4,18.8-5.2,37-11.1,54.1l29.5,12.6 c7.5-21.1,12.2-43.5,13.6-66.8H471.4z M321.2,462c-15.7,5-32.2,8.2-49.2,9.4v32.1c21.2-1.4,41.7-5.4,61.1-11.7L321.2,462z M240,471.4c-18.8-1.4-37-5.2-54.1-11.1l-12.6,29.5c21.1,7.5,43.5,12.2,66.8,13.6V471.4z M462,190.8c5,15.7,8.2,32.2,9.4,49.2h32.1 c-1.4-21.2-5.4-41.7-11.7-61.1L462,190.8z M92.4,397c-12-13.9-22.3-29.4-30.4-46.1l-29.8,11.9c9.9,20.7,22.6,39.8,37.6,56.9 L92.4,397z M272,40.6c18.8,1.4,36.9,5.2,54.1,11.1l12.6-29.5C317.7,14.7,295.3,10,272,8.5V40.6z M190.8,50 c15.7-5,32.2-8.2,49.2-9.4V8.5c-21.2,1.4-41.7,5.4-61.1,11.7L190.8,50z M442.3,92.3L419.6,115c12,13.9,22.3,29.4,30.5,46.1 l29.8-11.9C470,128.5,457.3,109.4,442.3,92.3z M397,92.4l22.7-22.7c-15.6-13.7-32.8-25.5-51.5-34.9l-12.6,29.5 C370.4,72.1,384.4,81.5,397,92.4z"})});var a=s(s({},r),{},{attributeName:"opacity"}),i={tag:"circle",attributes:s(s({},n),{},{cx:"256",cy:"364",r:"28"}),children:[]};return t||i.children.push({tag:"animate",attributes:s(s({},r),{},{attributeName:"r",values:"28;14;28;28;14;28;"})},{tag:"animate",attributes:s(s({},a),{},{values:"1;0;1;1;0;1;"})}),e.push(i),e.push({tag:"path",attributes:s(s({},n),{},{opacity:"1",d:"M263.7,312h-16c-6.6,0-12-5.4-12-12c0-71,77.4-63.9,77.4-107.8c0-20-17.8-40.2-57.4-40.2c-29.1,0-44.3,9.6-59.2,28.7 c-3.9,5-11.1,6-16.2,2.4l-13.1-9.2c-5.6-3.9-6.9-11.8-2.6-17.2c21.2-27.2,46.4-44.7,91.2-44.7c52.3,0,97.4,29.8,97.4,80.2 c0,67.6-77.4,63.5-77.4,107.8C275.7,306.6,270.3,312,263.7,312z"}),children:t?[]:[{tag:"animate",attributes:s(s({},a),{},{values:"1;0;0;0;0;1;"})}]}),t||e.push({tag:"path",attributes:s(s({},n),{},{opacity:"0",d:"M232.5,134.5l7,168c0.3,6.4,5.6,11.5,12,11.5h9c6.4,0,11.7-5.1,12-11.5l7-168c0.3-6.8-5.2-12.5-12-12.5h-23 C237.7,122,232.2,127.7,232.5,134.5z"}),children:[{tag:"animate",attributes:s(s({},a),{},{values:"0;0;1;1;0;0;"})}]}),{tag:"g",attributes:{class:"missing"},children:e}}}};!function(e,t){var n=t.mixoutsTo;ut=e,ft={},Object.keys(mt).forEach((function(e){-1===pt.indexOf(e)&&delete mt[e]})),ut.forEach((function(e){var t=e.mixout?e.mixout():{};if(Object.keys(t).forEach((function(e){"function"==typeof t[e]&&(n[e]=t[e]),"object"===c(t[e])&&Object.keys(t[e]).forEach((function(r){n[e]||(n[e]={}),n[e][r]=t[e][r]}))})),e.hooks){var r=e.hooks();Object.keys(r).forEach((function(e){ft[e]||(ft[e]=[]),ft[e].push(r[e])}))}e.provides&&e.provides(mt)}))}([Ne,tn,nn,rn,an,{hooks:function(){return{mutationObserverCallbacks:function(e){return e.pseudoElementsCallback=fn,e}}},provides:function(e){e.pseudoElements2svg=function(e){var t=e.node,n=void 0===t?N:t;pe.searchPseudoElements&&fn(n)}}},{mixout:function(){return{dom:{unwatch:function(){Yt(),mn=!0}}}},hooks:function(){return{bootstrap:function(){Ht(dt("mutationObserverCallbacks",{}))},noAuto:function(){Vt&&Vt.disconnect()},watch:function(e){var t=e.observeMutationsRoot;mn?$t():Ht(dt("mutationObserverCallbacks",{observeMutationsRoot:t}))}}}},dn,hn,gn,{hooks:function(){return{parseNodeAttributes:function(e,t){var n=t.getAttribute("data-fa-symbol"),r=null!==n&&(""===n||n);return e.symbol=r,e}}}}],{mixoutsTo:xt});var yn=xt.parse,xn=xt.icon,kn=n(980),wn=n.n(kn),En=n(196),On=n.n(En);function Sn(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Cn(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Sn(Object(n),!0).forEach((function(t){Nn(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Sn(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function _n(e){return _n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},_n(e)}function Nn(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Pn(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}function An(e){return function(e){if(Array.isArray(e))return In(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(!e)return;if("string"==typeof e)return In(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);"Object"===n&&e.constructor&&(n=e.constructor.name);if("Map"===n||"Set"===n)return Array.from(e);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return In(e,t)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function In(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function jn(e){return t=e,(t-=0)==t?e:(e=e.replace(/[\-_\s]+(.)?/g,(function(e,t){return t?t.toUpperCase():""}))).substr(0,1).toLowerCase()+e.substr(1);var t}var Bn=["style"];var zn=!1;try{zn=!0}catch(e){}function Mn(e){return e&&"object"===_n(e)&&e.prefix&&e.iconName&&e.icon?e:yn.icon?yn.icon(e):null===e?null:e&&"object"===_n(e)&&e.prefix&&e.iconName?e:Array.isArray(e)&&2===e.length?{prefix:e[0],iconName:e[1]}:"string"==typeof e?{prefix:"fas",iconName:e}:void 0}function Tn(e,t){return Array.isArray(t)&&t.length>0||!Array.isArray(t)&&t?Nn({},e,t):{}}var Dn=On().forwardRef((function(e,t){var n=e.icon,r=e.mask,a=e.symbol,i=e.className,o=e.title,s=e.titleId,c=e.maskId,l=Mn(n),u=Tn("classes",[].concat(An(function(e){var t,n=e.beat,r=e.fade,a=e.beatFade,i=e.bounce,o=e.shake,s=e.flash,c=e.spin,l=e.spinPulse,u=e.spinReverse,f=e.pulse,m=e.fixedWidth,p=e.inverse,d=e.border,b=e.listItem,v=e.flip,h=e.size,g=e.rotation,y=e.pull,x=(Nn(t={"fa-beat":n,"fa-fade":r,"fa-beat-fade":a,"fa-bounce":i,"fa-shake":o,"fa-flash":s,"fa-spin":c,"fa-spin-reverse":u,"fa-spin-pulse":l,"fa-pulse":f,"fa-fw":m,"fa-inverse":p,"fa-border":d,"fa-li":b,"fa-flip":!0===v,"fa-flip-horizontal":"horizontal"===v||"both"===v,"fa-flip-vertical":"vertical"===v||"both"===v},"fa-".concat(h),null!=h),Nn(t,"fa-rotate-".concat(g),null!=g&&0!==g),Nn(t,"fa-pull-".concat(y),null!=y),Nn(t,"fa-swap-opacity",e.swapOpacity),t);return Object.keys(x).map((function(e){return x[e]?e:null})).filter((function(e){return e}))}(e)),An(i.split(" ")))),f=Tn("transform","string"==typeof e.transform?yn.transform(e.transform):e.transform),m=Tn("mask",Mn(r)),p=xn(l,Cn(Cn(Cn(Cn({},u),f),m),{},{symbol:a,title:o,titleId:s,maskId:c}));if(!p)return function(){var e;!zn&&console&&"function"==typeof console.error&&(e=console).error.apply(e,arguments)}("Could not find icon",l),null;var d=p.abstract,b={ref:t};return Object.keys(e).forEach((function(t){Dn.defaultProps.hasOwnProperty(t)||(b[t]=e[t])})),Rn(d[0],b)}));Dn.displayName="FontAwesomeIcon",Dn.propTypes={beat:wn().bool,border:wn().bool,beatFade:wn().bool,bounce:wn().bool,className:wn().string,fade:wn().bool,flash:wn().bool,mask:wn().oneOfType([wn().object,wn().array,wn().string]),maskId:wn().string,fixedWidth:wn().bool,inverse:wn().bool,flip:wn().oneOf([!0,!1,"horizontal","vertical","both"]),icon:wn().oneOfType([wn().object,wn().array,wn().string]),listItem:wn().bool,pull:wn().oneOf(["right","left"]),pulse:wn().bool,rotation:wn().oneOf([0,90,180,270]),shake:wn().bool,size:wn().oneOf(["2xs","xs","sm","lg","xl","2xl","1x","2x","3x","4x","5x","6x","7x","8x","9x","10x"]),spin:wn().bool,spinPulse:wn().bool,spinReverse:wn().bool,symbol:wn().oneOfType([wn().bool,wn().string]),title:wn().string,titleId:wn().string,transform:wn().oneOfType([wn().string,wn().object]),swapOpacity:wn().bool},Dn.defaultProps={border:!1,className:"",mask:null,maskId:null,fixedWidth:!1,inverse:!1,flip:!1,icon:null,listItem:!1,pull:null,pulse:!1,rotation:null,size:null,spin:!1,spinPulse:!1,spinReverse:!1,beat:!1,fade:!1,beatFade:!1,bounce:!1,shake:!1,symbol:!1,title:"",titleId:null,transform:null,swapOpacity:!1};var Rn=function e(t,n){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if("string"==typeof n)return n;var a=(n.children||[]).map((function(n){return e(t,n)})),i=Object.keys(n.attributes||{}).reduce((function(e,t){var r=n.attributes[t];switch(t){case"class":e.attrs.className=r,delete n.attributes.class;break;case"style":e.attrs.style=r.split(";").map((function(e){return e.trim()})).filter((function(e){return e})).reduce((function(e,t){var n,r=t.indexOf(":"),a=jn(t.slice(0,r)),i=t.slice(r+1).trim();return a.startsWith("webkit")?e[(n=a,n.charAt(0).toUpperCase()+n.slice(1))]=i:e[a]=i,e}),{});break;default:0===t.indexOf("aria-")||0===t.indexOf("data-")?e.attrs[t.toLowerCase()]=r:e.attrs[jn(t)]=r}return e}),{attrs:{}}),o=r.style,s=void 0===o?{}:o,c=Pn(r,Bn);return i.attrs.style=Cn(Cn({},i.attrs.style),s),t.apply(void 0,[n.tag,Cn(Cn({},i.attrs),c)].concat(An(a)))}.bind(null,On().createElement);function Fn(e){let{type:t,size:n,uploadedSVG:o,fixedSizing:s=!1,...c}=e;return o?(0,a.createElement)("img",{alt:o.title,src:o.url}):c.icon&&t?-1!==t.indexOf("fa")?(0,a.createElement)(Dn,(0,r.Z)({},c,{style:s?"":{width:`${n}px`,height:`${n}px`}})):(0,a.createElement)(i.Icon,(0,r.Z)({},c,{size:s?22:n+5})):(0,a.createElement)(a.Fragment,null)}n(736);var Ln=n(515);function Un(e){let{children:t,className:n="button-component",...o}=e;return(0,a.createElement)(i.Button,(0,r.Z)({className:(0,Ln.componentClassNames)(n)},o),t)}function Zn(e){let{children:t,className:n="vertical-stack-component",...o}=e;return(0,a.createElement)(i.__experimentalVStack,(0,r.Z)({},o,{className:(0,Ln.componentClassNames)(n)}),t)}function Yn(e){let{children:t,className:n="horizontal-stack-component",...o}=e;return(0,a.createElement)(i.__experimentalHStack,(0,r.Z)({},o,{className:(0,Ln.componentClassNames)(n)}),t)}var $n=n(175);function Vn(e){let{title:t,initialOpen:n,children:r,...o}=e;return(0,a.createElement)("div",o,(0,a.createElement)($n.InspectorControls,null,(0,a.createElement)(i.PanelBody,{title:t,initialOpen:n},r)))}},847:function(e,t,n){"use strict";n.d(t,{BoxShadowControl:function(){return Ze},OpacityControl:function(){return M},TransitionControl:function(){return $e}});var r=n(462),a=n(307),i=n(609),o=n(515);function s(e){let{className:t="base",...n}=e;return(0,a.createElement)(i.BaseControl,(0,r.Z)({className:(0,o.controlClassNames)(t)},n))}var c=n(175),l=n(736),u=(n(184),n(379)),f=n.n(u),m=n(795),p=n.n(m),d=n(569),b=n.n(d),v=n(565),h=n.n(v),g=n(216),y=n.n(g),x=n(589),k=n.n(x),w=n(725),E={};E.styleTagTransform=k(),E.setAttributes=h(),E.insert=b().bind(null,"head"),E.domAPI=p(),E.insertStyleElement=y();f()(w.Z,E),w.Z&&w.Z.locals&&w.Z.locals;var O=n(930);(0,a.createContext)({iconInfo:{name:null,size:null,type:null,uploadSVG:null},dispatch:()=>{},recommendationList:[],handleOnIconClick:()=>{}});function S(e){let{className:t="unit-control",...n}=e;return(0,a.createElement)(c.__experimentalUnitControl,(0,r.Z)({className:(0,o.controlClassNames)(t)},n))}function C(e){let{isOpen:t,element:n,onClose:r=(()=>{}),onChange:o=(()=>{})}=e;return(0,a.createElement)(i.Popover,{offset:20,placement:"left-start",className:"components-palette-edit-popover",onClose:r},t&&(0,a.createElement)(i.ColorPicker,{enableAlpha:!1,color:n.color,onChangeComplete:e=>o(e.hex)}))}var _=n(974),N={};N.styleTagTransform=k(),N.setAttributes=h(),N.insert=b().bind(null,"head"),N.domAPI=p(),N.insertStyleElement=y();f()(_.Z,N),_.Z&&_.Z.locals&&_.Z.locals;function P(e){let{color:t,className:n="color-control",...s}=e;const[c,u]=(0,a.useState)(!1);return(0,a.createElement)("div",{className:(0,o.controlClassNames)(n)},(0,a.createElement)("div",{className:"color-indicator-with-label"},(0,a.createElement)(i.ColorIndicator,{colorValue:t,className:"color-indicator",onClick:()=>u(!0)}),(0,l.__)("Color","publisher")),(0,a.createElement)(C,(0,r.Z)({onClose:()=>u(!1)},s,{isOpen:c,element:{color:t||"transparent"}})))}var A=n(412),I={};I.styleTagTransform=k(),I.setAttributes=h(),I.insert=b().bind(null,"head"),I.domAPI=p(),I.insertStyleElement=y();f()(A.Z,I),A.Z&&A.Z.locals&&A.Z.locals;function j(e){let{isOpen:t,header:n,children:r,groupId:s=null,dropArgs:c=null,isPopover:l=!1,isDraggable:u=!1,dropCallback:f=null,className:m="group"}=e;const p=(0,a.useRef)(null),[d,b]=(0,a.useState)(null);(0,a.useEffect)((()=>{p.current={opacity:d&&d!==s?.5:1}}),[d,s]);return(0,a.createElement)("div",{draggable:!0,onDragOver:e=>{e.preventDefault()},onDrop:e=>((e,t)=>{if(e.preventDefault(),b(t),!f)return;const n=t,r=parseInt(e.dataTransfer.getData("text/plain"),10);f({args:c,fromIndex:r,toIndex:n})})(e,s),className:(0,o.controlClassNames)(m),onDragStart:e=>((e,t)=>{e.dataTransfer.setData("text/plain",t),b(t)})(e,s),style:p.current},(0,a.createElement)("div",{className:"header"+(u?" draggable":"")},(0,a.createElement)("div",{className:"header-label"},n)),l?t&&(0,a.createElement)(i.Popover,{offset:20,placement:"left-start"},(0,a.createElement)("div",{className:"content"},r)):t&&(0,a.createElement)("div",{className:"content"},r))}var B=e=>{const{className:t="range-control",value:n,onChange:o=(()=>{}),min:s=12,max:c=30}=e;return(0,a.createElement)(a.Fragment,null,(0,a.createElement)(i.RangeControl,(0,r.Z)({min:s,max:c,value:n},e,{onChange:o,className:t})))};function z(e){let{className:t="toggle-control",...n}=e;return(0,a.createElement)(i.ToggleControl,(0,r.Z)({className:(0,o.controlClassNames)(t)},n))}function M(e){let{className:t="opacity-control",initialValue:n=0}=e;const[r,i]=(0,a.useState)(n);return(0,a.createElement)(B,{value:r,onChange:e=>i(e),label:(0,l.__)("Opacity","publisher-core"),className:(0,o.controlClassNames)(t)})}var T=n(117),D=Symbol.for("immer-nothing"),R=Symbol.for("immer-draftable"),F=Symbol.for("immer-state");function L(e,...t){throw new Error(`[Immer] minified error nr: ${e}. Full error at: https://bit.ly/3cXEKWf`)}var U=Object.getPrototypeOf;function Z(e){return!!e&&!!e[F]}function Y(e){return!!e&&(V(e)||Array.isArray(e)||!!e[R]||!!e.constructor?.[R]||K(e)||q(e))}var $=Object.prototype.constructor.toString();function V(e){if(!e||"object"!=typeof e)return!1;const t=U(e);if(null===t)return!0;const n=Object.hasOwnProperty.call(t,"constructor")&&t.constructor;return n===Object||"function"==typeof n&&Function.toString.call(n)===$}function H(e,t){0===W(e)?Object.entries(e).forEach((([n,r])=>{t(n,r,e)})):e.forEach(((n,r)=>t(r,n,e)))}function W(e){const t=e[F];return t?t.type_:Array.isArray(e)?1:K(e)?2:q(e)?3:0}function G(e,t){return 2===W(e)?e.has(t):Object.prototype.hasOwnProperty.call(e,t)}function X(e,t,n){const r=W(e);2===r?e.set(t,n):3===r?e.add(n):e[t]=n}function K(e){return e instanceof Map}function q(e){return e instanceof Set}function J(e){return e.copy_||e.base_}function Q(e,t){if(K(e))return new Map(e);if(q(e))return new Set(e);if(Array.isArray(e))return Array.prototype.slice.call(e);if(!t&&V(e)){if(!U(e)){const t=Object.create(null);return Object.assign(t,e)}return{...e}}const n=Object.getOwnPropertyDescriptors(e);delete n[F];let r=Reflect.ownKeys(n);for(let t=0;t<r.length;t++){const a=r[t],i=n[a];!1===i.writable&&(i.writable=!0,i.configurable=!0),(i.get||i.set)&&(n[a]={configurable:!0,writable:!0,enumerable:i.enumerable,value:e[a]})}return Object.create(U(e),n)}function ee(e,t=!1){return ne(e)||Z(e)||!Y(e)||(W(e)>1&&(e.set=e.add=e.clear=e.delete=te),Object.freeze(e),t&&H(e,((e,t)=>ee(t,!0)))),e}function te(){L(2)}function ne(e){return Object.isFrozen(e)}var re,ae={};function ie(e){const t=ae[e];return t||L(0),t}function oe(){return re}function se(e,t){t&&(ie("Patches"),e.patches_=[],e.inversePatches_=[],e.patchListener_=t)}function ce(e){le(e),e.drafts_.forEach(fe),e.drafts_=null}function le(e){e===re&&(re=e.parent_)}function ue(e){return re={drafts_:[],parent_:re,immer_:e,canAutoFreeze_:!0,unfinalizedDrafts_:0}}function fe(e){const t=e[F];0===t.type_||1===t.type_?t.revoke_():t.revoked_=!0}function me(e,t){t.unfinalizedDrafts_=t.drafts_.length;const n=t.drafts_[0];return void 0!==e&&e!==n?(n[F].modified_&&(ce(t),L(4)),Y(e)&&(e=pe(t,e),t.parent_||be(t,e)),t.patches_&&ie("Patches").generateReplacementPatches_(n[F].base_,e,t.patches_,t.inversePatches_)):e=pe(t,n,[]),ce(t),t.patches_&&t.patchListener_(t.patches_,t.inversePatches_),e!==D?e:void 0}function pe(e,t,n){if(ne(t))return t;const r=t[F];if(!r)return H(t,((a,i)=>de(e,r,t,a,i,n))),t;if(r.scope_!==e)return t;if(!r.modified_)return be(e,r.base_,!0),r.base_;if(!r.finalized_){r.finalized_=!0,r.scope_.unfinalizedDrafts_--;const t=r.copy_;let a=t,i=!1;3===r.type_&&(a=new Set(t),t.clear(),i=!0),H(a,((a,o)=>de(e,r,t,a,o,n,i))),be(e,t,!1),n&&e.patches_&&ie("Patches").generatePatches_(r,n,e.patches_,e.inversePatches_)}return r.copy_}function de(e,t,n,r,a,i,o){if(Z(a)){const o=pe(e,a,i&&t&&3!==t.type_&&!G(t.assigned_,r)?i.concat(r):void 0);if(X(n,r,o),!Z(o))return;e.canAutoFreeze_=!1}else o&&n.add(a);if(Y(a)&&!ne(a)){if(!e.immer_.autoFreeze_&&e.unfinalizedDrafts_<1)return;pe(e,a),t&&t.scope_.parent_||be(e,a)}}function be(e,t,n=!1){!e.parent_&&e.immer_.autoFreeze_&&e.canAutoFreeze_&&ee(t,n)}var ve={get(e,t){if(t===F)return e;const n=J(e);if(!G(n,t))return function(e,t,n){const r=ye(t,n);return r?"value"in r?r.value:r.get?.call(e.draft_):void 0}(e,n,t);const r=n[t];return e.finalized_||!Y(r)?r:r===ge(e.base_,t)?(ke(e),e.copy_[t]=we(r,e)):r},has(e,t){return t in J(e)},ownKeys(e){return Reflect.ownKeys(J(e))},set(e,t,n){const r=ye(J(e),t);if(r?.set)return r.set.call(e.draft_,n),!0;if(!e.modified_){const r=ge(J(e),t),o=r?.[F];if(o&&o.base_===n)return e.copy_[t]=n,e.assigned_[t]=!1,!0;if(((a=n)===(i=r)?0!==a||1/a==1/i:a!=a&&i!=i)&&(void 0!==n||G(e.base_,t)))return!0;ke(e),xe(e)}var a,i;return e.copy_[t]===n&&(void 0!==n||t in e.copy_)||Number.isNaN(n)&&Number.isNaN(e.copy_[t])||(e.copy_[t]=n,e.assigned_[t]=!0),!0},deleteProperty(e,t){return void 0!==ge(e.base_,t)||t in e.base_?(e.assigned_[t]=!1,ke(e),xe(e)):delete e.assigned_[t],e.copy_&&delete e.copy_[t],!0},getOwnPropertyDescriptor(e,t){const n=J(e),r=Reflect.getOwnPropertyDescriptor(n,t);return r?{writable:!0,configurable:1!==e.type_||"length"!==t,enumerable:r.enumerable,value:n[t]}:r},defineProperty(){L(11)},getPrototypeOf(e){return U(e.base_)},setPrototypeOf(){L(12)}},he={};function ge(e,t){const n=e[F];return(n?J(n):e)[t]}function ye(e,t){if(!(t in e))return;let n=U(e);for(;n;){const e=Object.getOwnPropertyDescriptor(n,t);if(e)return e;n=U(n)}}function xe(e){e.modified_||(e.modified_=!0,e.parent_&&xe(e.parent_))}function ke(e){e.copy_||(e.copy_=Q(e.base_,e.scope_.immer_.useStrictShallowCopy_))}H(ve,((e,t)=>{he[e]=function(){return arguments[0]=arguments[0][0],t.apply(this,arguments)}})),he.deleteProperty=function(e,t){return he.set.call(this,e,t,void 0)},he.set=function(e,t,n){return ve.set.call(this,e[0],t,n,e[0])};function we(e,t){const n=K(e)?ie("MapSet").proxyMap_(e,t):q(e)?ie("MapSet").proxySet_(e,t):function(e,t){const n=Array.isArray(e),r={type_:n?1:0,scope_:t?t.scope_:oe(),modified_:!1,finalized_:!1,assigned_:{},parent_:t,base_:e,draft_:null,copy_:null,revoke_:null,isManual_:!1};let a=r,i=ve;n&&(a=[r],i=he);const{revoke:o,proxy:s}=Proxy.revocable(a,i);return r.draft_=s,r.revoke_=o,s}(e,t);return(t?t.scope_:oe()).drafts_.push(n),n}function Ee(e){if(!Y(e)||ne(e))return e;const t=e[F];let n;if(t){if(!t.modified_)return t.base_;t.finalized_=!0,n=Q(e,t.scope_.immer_.useStrictShallowCopy_)}else n=Q(e,!0);return H(n,((e,t)=>{X(n,e,Ee(t))})),t&&(t.finalized_=!1),n}var Oe=new class{constructor(e){this.autoFreeze_=!0,this.useStrictShallowCopy_=!1,this.produce=(e,t,n)=>{if("function"==typeof e&&"function"!=typeof t){const n=t;t=e;const r=this;return function(e=n,...a){return r.produce(e,(e=>t.call(this,e,...a)))}}let r;if("function"!=typeof t&&L(6),void 0!==n&&"function"!=typeof n&&L(7),Y(e)){const a=ue(this),i=we(e,void 0);let o=!0;try{r=t(i),o=!1}finally{o?ce(a):le(a)}return se(a,n),me(r,a)}if(!e||"object"!=typeof e){if(r=t(e),void 0===r&&(r=e),r===D&&(r=void 0),this.autoFreeze_&&ee(r,!0),n){const t=[],a=[];ie("Patches").generateReplacementPatches_(e,r,t,a),n(t,a)}return r}L(1)},this.produceWithPatches=(e,t)=>{if("function"==typeof e)return(t,...n)=>this.produceWithPatches(t,(t=>e(t,...n)));let n,r;return[this.produce(e,t,((e,t)=>{n=e,r=t})),n,r]},"boolean"==typeof e?.autoFreeze&&this.setAutoFreeze(e.autoFreeze),"boolean"==typeof e?.useStrictShallowCopy&&this.setUseStrictShallowCopy(e.useStrictShallowCopy)}createDraft(e){Y(e)||L(8),Z(e)&&(e=function(e){Z(e)||L(10);return Ee(e)}(e));const t=ue(this),n=we(e,void 0);return n[F].isManual_=!0,le(t),n}finishDraft(e,t){const n=e&&e[F];n&&n.isManual_||L(9);const{scope_:r}=n;return se(r,t),me(void 0,r)}setAutoFreeze(e){this.autoFreeze_=e}setUseStrictShallowCopy(e){this.useStrictShallowCopy_=e}applyPatches(e,t){let n;for(n=t.length-1;n>=0;n--){const r=t[n];if(0===r.path.length&&"replace"===r.op){e=r.value;break}}n>-1&&(t=t.slice(n+1));const r=ie("Patches").applyPatches_;return Z(e)?r(e,t):this.produce(e,(e=>r(e,t)))}},Se=Oe.produce;Oe.produceWithPatches.bind(Oe),Oe.setAutoFreeze.bind(Oe),Oe.setUseStrictShallowCopy.bind(Oe),Oe.applyPatches.bind(Oe),Oe.createDraft.bind(Oe),Oe.finishDraft.bind(Oe);var Ce=n(196);function _e(e,t){switch(t.type){case"ADD":e.push(t.payload);break;case"REMOVE":return e.filter(((e,n)=>n!==t.payload));case"MODIFY":const n=e.findIndex(((e,n)=>n===t.payload.id));e[n]=t.payload.item;break;case"SORT":return e=(e=>{let{args:t,toIndex:n,fromIndex:r}=e;const a=[...t],[i]=a.splice(r,1);return a.splice(n,0,i),a})(t.payload)}}const Ne=(0,a.createContext)({Header:null,clientId:null,attributes:{},initialState:{},repeaterItems:{},addNewItem:()=>{},removeItem:()=>{},changeItem:()=>{},InnerComponents:null}),Pe=e=>{let{children:t,...n}=e;return(0,a.createElement)(Ne.Provider,{value:n},t)};var Ae=n(526),Ie=n(577);function je(e){let{isVisible:t,setVisibility:n}=e;return(0,a.createElement)("span",{className:"status"},t&&(0,a.createElement)(O.Icon,{type:"far",size:16,icon:Ie.faEye,onClick:()=>n(!t)}),!t&&(0,a.createElement)(O.Icon,{size:16,type:"far",icon:Ie.faEyeSlash,onClick:()=>n(!t)}))}function Be(e){let{itemId:t,isOpen:n,setOpen:r,isVisible:i,setVisibility:o}=e;const{removeItem:s}=(0,a.useContext)(Ne);return(0,a.createElement)(a.Fragment,null,(0,a.createElement)(je,{setVisibility:o,isVisible:i}),(0,a.createElement)(O.Button,{icon:Ae.Z,showTooltip:!0,onClick:()=>s(t),label:(0,l.__)("Delete","publisher")}),(0,a.createElement)(O.Button,{icon:n?"arrow-up-alt2":"arrow-down-alt2",label:n?(0,l.__)("Close Settings","publisher"):(0,l.__)("Open Settings","publisher"),showTooltip:!0,onClick:()=>r(!n)}))}var ze=(0,a.memo)((e=>{let{item:t,itemId:n}=e;const[r,i]=(0,a.useState)(!1),[o,s]=(0,a.useState)(!0),{InnerComponents:c,Header:u,sortItems:f,repeaterItems:m}=(0,a.useContext)(Ne),p={itemId:n,isOpen:r,setOpen:i,isVisible:o,setVisibility:s};return(0,a.createElement)("div",{className:"repeater-item"},(0,a.createElement)(j,{isDraggable:!0,groupId:n,dropArgs:m,dropCallback:f,className:"group"+(o?" activate":" deactivate"),header:u?(0,a.createElement)(u,{item:t,itemId:n},(0,a.createElement)(Be,p)):(0,a.createElement)(a.Fragment,null,(0,l.__)("Item ","publisher")+n,(0,a.createElement)(Be,p)),children:(0,a.createElement)(c,{item:t,itemId:n}),isOpen:r,isPopover:!0}))}));var Me=()=>{const{repeaterItems:e}=(0,a.useContext)(Ne);return(0,a.useMemo)((()=>e.map(((e,t)=>(0,a.createElement)(i.__experimentalSpacer,{key:`repeater-item-${t}`},(0,a.createElement)(ze,{item:e,itemId:t}))))),[e])};var Te=n(574),De={};De.styleTagTransform=k(),De.setAttributes=h(),De.insert=b().bind(null,"head"),De.domAPI=p(),De.insertStyleElement=y();f()(Te.Z,De),Te.Z&&Te.Z.locals&&Te.Z.locals;var Re=e=>{let{label:t,value:n,Header:r,clientId:i,InnerComponents:s,initialState:c={},className:l="repeater",updateBlockAttributes:u=(()=>{})}=e;const[f,m]=function(e,t,n){var r=(0,Ce.useMemo)((function(){return Se(e)}),[e]);return(0,Ce.useReducer)(r,t,n)}(_e,n?.length?n:[c]);(0,a.useEffect)((()=>{n!==f&&u(f)}),[f,n,u]);const p={Header:r,clientId:i,dispatch:m,initialState:c,repeaterItems:f,InnerComponents:s,addNewItem:()=>m({type:"ADD",payload:c}),removeItem:e=>m({type:"REMOVE",payload:e}),changeItem:(e,t)=>m({type:"MODIFY",payload:{id:e,item:t}}),sortItems:e=>m((e=>{let{args:t,toIndex:n,fromIndex:r}=e;return{type:"SORT",payload:{args:t,toIndex:n,fromIndex:r}}})(e))};return(0,a.createElement)(Pe,p,(0,a.createElement)("div",{className:(0,o.controlClassNames)("control",l)},(0,a.createElement)(Me,null),(0,a.createElement)(O.Button,{className:"add-new-item",onClick:p.addNewItem},(0,a.createElement)(O.Icon,{type:"wp",icon:T.Z,size:17}),t)))};var Fe=(0,a.memo)((e=>{let{item:{x:t,y:n,blur:r,spread:o,unit:s="px",color:c="#fff"},children:l}=e;return(0,a.createElement)("div",{className:"header-label"},(0,a.createElement)(i.ColorIndicator,{colorValue:c,className:"color-indicator"}),(0,a.createElement)("span",{className:"publisher-core-box-shadow-values"},(()=>{const e=e=>("string"==typeof e&&(e=e.replace(/[px,%,em]/g,"")),e?.length?e?.includes(s)?e:`${e}${s}`:`0${s}`);return`${e(t)} ${e(n)} ${e(r)} ${e(o)}`})()),l)}));var Le=(0,a.memo)((e=>{let{item:t,itemId:n}=e;const{changeItem:o}=(0,a.useContext)(Ne),{x:c,y:u,blur:f,spread:m,inset:p,color:d,unit:b}=t,v={unit:b,max:32,min:-32,units:(0,i.__experimentalUseCustomUnits)({availableUnits:["px","%","em"],defaultValues:{px:0}}),onUnitChange:e=>o(n,{...t,unit:e})};return(0,a.createElement)(s,{id:`repeater-item-${n}`},(0,a.createElement)(O.VStack,null,(0,a.createElement)(O.HStack,{justify:"space-between"},(0,a.createElement)(S,(0,r.Z)({value:c},v,{onChange:e=>o(n,{...t,x:e}),label:(0,l.__)("X","publisher")})),(0,a.createElement)(S,(0,r.Z)({value:u},v,{onChange:e=>o(n,{...t,y:e}),label:(0,l.__)("Y","publisher")}))),(0,a.createElement)(O.HStack,{justify:"space-between"},(0,a.createElement)(S,(0,r.Z)({value:f},v,{onChange:e=>o(n,{...t,blur:e}),label:(0,l.__)("BLUR","publisher")})),(0,a.createElement)(S,(0,r.Z)({value:m},v,{onChange:e=>o(n,{...t,spread:e}),label:(0,l.__)("SPREAD","publisher")}))),(0,a.createElement)(O.HStack,{justify:"space-between"},(0,a.createElement)(P,{color:d,onChange:e=>o(n,{...t,color:e})}),(0,a.createElement)(z,{label:(0,l.__)("Inset","publisher"),help:"",checked:p,onChange:()=>o(n,{...t,inset:!p})}))))}));const Ue={x:0,y:0,blur:0,spread:0,unit:"px",inset:!1,isVisible:!0,color:"transparent"};var Ze=function(e){let{attributes:t,setAttributes:n,className:i="box-shadow",...s}=e;const{publisherBoxShadowItems:c}=t,u=(0,a.useCallback)((e=>{n({...t,publisherBoxShadowItems:e})}),[t,n]);return(0,a.createElement)("div",{className:(0,o.controlClassNames)("control",i)},(0,a.createElement)(Re,(0,r.Z)({label:(0,l.__)("Add Box Shadow","publisher")},s,{Header:Fe,initialState:Ue,updateBlockAttributes:u,value:c,InnerComponents:Le})))};const Ye={x:0,y:0,blur:0,spread:0,unit:"px",inset:!1,isVisible:!0,color:"transparent"};var $e=function(e){let{attributes:t,setAttributes:n,className:i="transition",...s}=e;const{Transition:c}=t,u=(0,a.useCallback)((e=>{n({...t,Transition:e})}),[t,n]);return(0,a.createElement)("div",{className:(0,o.controlClassNames)("control",i)},(0,a.createElement)(Re,(0,r.Z)({label:(0,l.__)("Add Transition","publisher")},s,{initialState:Ye,updateBlockAttributes:u,value:c,InnerComponents:()=>(0,a.createElement)(a.Fragment,null,"Hello Transition")})))}},678:function(e,t,n){"use strict";function r(e,t){const n=e.split(".");let r=[];return n.forEach(((e,t)=>{r=function(e,t,n){if(-1!==e.indexOf("[")){return e.split("[").forEach((e=>{n.push(e.replace(/\[|\]/g,""))})),n}return n.push(e.replace(/\[|\]/g,"")),n}(e,0,r)})),function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];return n.reduce(a,t)}(...r)}function a(e,t){const n=/\[.*\]/gi;let r,a=e[t];for(;null!==(r=n.exec(t));)r.index===n.lastIndex&&n.lastIndex++,r.forEach((e=>{e[0]=e[0].replace(/\[|\]/g,""),a=a[e[0]]}));return a}n.d(t,{prepare:function(){return r}})},413:function(e,t,n){"use strict";function r(e){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},r(e)}function a(e){var t=function(e,t){if("object"!==r(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var a=n.call(e,t||"default");if("object"!==r(a))return a;throw new TypeError("@@toPrimitive must return a primitive value.")}return("string"===t?String:Number)(e)}(e,"string");return"symbol"===r(t)?t:String(t)}function i(e,t,n){return(t=a(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}n.d(t,{default:function(){return s}});var o=n(601);class s{constructor(e,t,n){let{type:r,function:a,selector:o,properties:s}=t;i(this,"name",""),i(this,"selector",""),i(this,"type","static"),i(this,"properties",{}),i(this,"blockProps",{}),i(this,"function",(()=>{})),this.name=e,this.type=r,this.selector=o,this.function=a,this.properties=s,this.blockProps=n}getPropValue(e){const{attributes:t}=this.blockProps;return e&&t[e]||t}rules(){const e=`add${this.type.charAt(0).toUpperCase()+this.type.slice(1)}Rule`;return this[e]?this[e]():""}setUniqueClassName(){this.selector=this.selector.replace(/\.{{BLOCK_ID}}/g,`.publisher-core.extension.publisher-extension-ref.client-id-${this.blockProps?.clientId}`)}addStaticRule(){return this.setUniqueClassName(),(0,o.Xg)(this)}addFunctionRule(){return this.getPropValue(this.name)?this.function(this.name,this.blockProps,this):""}}},601:function(e,t,n){"use strict";n.d(t,{Bv:function(){return s},W0:function(){return o},Xg:function(){return c}});var r=n(413),a=n(678),i=n(819);const o=(e,t)=>(Object.values(t).forEach(((n,r)=>{n.forEach((n=>{"function"===n?.type&&(t[Object.keys(t)[r]]={...n,function:e[n.function]})}))})),t),s=(e,t)=>{let n="";const{publisherCssGenerators:a=[]}=e;for(const e in a){if(!Object.hasOwnProperty.call(a,e))continue;const i=a[e];if(!i?.type)continue;n+=new r.default(e,i,t).rules()+"\n"}return n},c=e=>{if(!function(e,t){for(let n=0;n<t.length;n++)if(!e.hasOwnProperty(t[n]))return!1;return!0}(e,["selector","properties"]))return console.warn(`Style rule: %o ${JSON.stringify(e)} avoid css rule validation!`),"";const{properties:t=[],selector:n="",blockProps:r={}}=e;let o=[];const s=Object.keys(t),c=s.length-1;for(const e in t){if(!Object.hasOwnProperty.call(t,e))continue;const n=t[e];(0,i.isString)(n)?o.push(`${e}: ${n}${-1===n.indexOf(";")?";\n":"\n"}${c===s.indexOf(e)?"\n":""}`):console.warn(`CSS property value must be string given ${typeof n}, please double check properties.`)}return o=o.join("\n"),r?.attributes?(function(e){const t=/{{[^{}]+}}/gi,n=e.matchAll(t),r=[];for(const e of n)r.push(e[0].replace(/\{|\}/g,""));return r}(o).forEach((e=>{const t=(0,a.prepare)(e,r?.attributes);t&&(o=o.replace(e,t).replace(/\{|\}/g,""))})),`${n}{${o}}`):`${n}{${o}}`}},184:function(e,t){var n;!function(){"use strict";var r={}.hasOwnProperty;function a(){for(var e=[],t=0;t<arguments.length;t++){var n=arguments[t];if(n){var i=typeof n;if("string"===i||"number"===i)e.push(n);else if(Array.isArray(n)){if(n.length){var o=a.apply(null,n);o&&e.push(o)}}else if("object"===i){if(n.toString!==Object.prototype.toString&&!n.toString.toString().includes("[native code]")){e.push(n.toString());continue}for(var s in n)r.call(n,s)&&n[s]&&e.push(s)}}}return e.join(" ")}e.exports?(a.default=a,e.exports=a):void 0===(n=function(){return a}.apply(t,[]))||(e.exports=n)}()},974:function(e,t,n){"use strict";var r=n(537),a=n.n(r),i=n(645),o=n.n(i)()(a());o.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),t.Z=o},412:function(e,t,n){"use strict";var r=n(537),a=n.n(r),i=n(645),o=n.n(i)()(a());o.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),t.Z=o},725:function(e,t,n){"use strict";var r=n(537),a=n.n(r),i=n(645),o=n.n(i)()(a());o.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),t.Z=o},574:function(e,t,n){"use strict";var r=n(537),a=n.n(r),i=n(645),o=n.n(i)()(a());o.push([e.id,"","",{version:3,sources:[],names:[],mappings:"",sourceRoot:""}]),t.Z=o},645:function(e){"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,i){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(o[c]=!0)}for(var l=0;l<e.length;l++){var u=[].concat(e[l]);r&&o[u[0]]||(void 0!==i&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=i),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),t.push(u))}},t}},537:function(e){"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(a," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},379:function(e){"use strict";var t=[];function n(e){for(var n=-1,r=0;r<t.length;r++)if(t[r].identifier===e){n=r;break}return n}function r(e,r){for(var i={},o=[],s=0;s<e.length;s++){var c=e[s],l=r.base?c[0]+r.base:c[0],u=i[l]||0,f="".concat(l," ").concat(u);i[l]=u+1;var m=n(f),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==m)t[m].references++,t[m].updater(p);else{var d=a(p,r);r.byIndex=s,t.splice(s,0,{identifier:f,updater:d,references:1})}o.push(f)}return o}function a(e,t){var n=t.domAPI(t);n.update(e);return function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;n.update(e=t)}else n.remove()}}e.exports=function(e,a){var i=r(e=e||[],a=a||{});return function(e){e=e||[];for(var o=0;o<i.length;o++){var s=n(i[o]);t[s].references--}for(var c=r(e,a),l=0;l<i.length;l++){var u=n(i[l]);0===t[u].references&&(t[u].updater(),t.splice(u,1))}i=c}}},569:function(e){"use strict";var t={};e.exports=function(e,n){var r=function(e){if(void 0===t[e]){var n=document.querySelector(e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(n)}},216:function(e){"use strict";e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},565:function(e,t,n){"use strict";e.exports=function(e){var t=n.nc;t&&e.setAttribute("nonce",t)}},795:function(e){"use strict";e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(n){!function(e,t,n){var r="";n.supports&&(r+="@supports (".concat(n.supports,") {")),n.media&&(r+="@media ".concat(n.media," {"));var a=void 0!==n.layer;a&&(r+="@layer".concat(n.layer.length>0?" ".concat(n.layer):""," {")),r+=n.css,a&&(r+="}"),n.media&&(r+="}"),n.supports&&(r+="}");var i=n.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,n)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},589:function(e){"use strict";e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}},262:function(e,t,n){"use strict";var r=n(586);function a(){}function i(){}i.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,i,o){if(o!==r){var s=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw s.name="Invariant Violation",s}}function t(){return e}e.isRequired=e;var n={array:e,bigint:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:i,resetWarningCache:a};return n.PropTypes=n,n}},980:function(e,t,n){e.exports=n(262)()},586:function(e){"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},196:function(e){"use strict";e.exports=window.React},819:function(e){"use strict";e.exports=window.lodash},175:function(e){"use strict";e.exports=window.wp.blockEditor},609:function(e){"use strict";e.exports=window.wp.components},307:function(e){"use strict";e.exports=window.wp.element},736:function(e){"use strict";e.exports=window.wp.i18n},444:function(e){"use strict";e.exports=window.wp.primitives},462:function(e,t,n){"use strict";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},r.apply(this,arguments)}n.d(t,{Z:function(){return r}})},577:function(e,t,n){"use strict";n.d(t,{faEye:function(){return a},faEyeSlash:function(){return r}});var r={prefix:"far",iconName:"eye-slash",icon:[640,512,[],"f070","M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7L525.6 386.7c39.6-40.6 66.4-86.1 79.9-118.4c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C465.5 68.8 400.8 32 320 32c-68.2 0-125 26.3-169.3 60.8L38.8 5.1zm151 118.3C226 97.7 269.5 80 320 80c65.2 0 118.8 29.6 159.9 67.7C518.4 183.5 545 226 558.6 256c-12.6 28-36.6 66.8-70.9 100.9l-53.8-42.2c9.1-17.6 14.2-37.5 14.2-58.7c0-70.7-57.3-128-128-128c-32.2 0-61.7 11.9-84.2 31.5l-46.1-36.1zM394.9 284.2l-81.5-63.9c4.2-8.5 6.6-18.2 6.6-28.3c0-5.5-.7-10.9-2-16c.7 0 1.3 0 2 0c44.2 0 80 35.8 80 80c0 9.9-1.8 19.4-5.1 28.2zm9.4 130.3C378.8 425.4 350.7 432 320 432c-65.2 0-118.8-29.6-159.9-67.7C121.6 328.5 95 286 81.4 256c8.3-18.4 21.5-41.5 39.4-64.8L83.1 161.5C60.3 191.2 44 220.8 34.5 243.7c-3.3 7.9-3.3 16.7 0 24.6c14.9 35.7 46.2 87.7 93 131.1C174.5 443.2 239.2 480 320 480c47.8 0 89.9-12.9 126.2-32.5l-41.9-33zM192 256c0 70.7 57.3 128 128 128c13.3 0 26.1-2 38.2-5.8L302 334c-23.5-5.4-43.1-21.2-53.7-42.3l-56.1-44.2c-.2 2.8-.3 5.6-.3 8.5z"]},a={prefix:"far",iconName:"eye",icon:[576,512,[128065],"f06e","M288 80c-65.2 0-118.8 29.6-159.9 67.7C89.6 183.5 63 226 49.4 256c13.6 30 40.2 72.5 78.6 108.3C169.2 402.4 222.8 432 288 432s118.8-29.6 159.9-67.7C486.4 328.5 513 286 526.6 256c-13.6-30-40.2-72.5-78.6-108.3C406.8 109.6 353.2 80 288 80zM95.4 112.6C142.5 68.8 207.2 32 288 32s145.5 36.8 192.6 80.6c46.8 43.5 78.1 95.4 93 131.1c3.3 7.9 3.3 16.7 0 24.6c-14.9 35.7-46.2 87.7-93 131.1C433.5 443.2 368.8 480 288 480s-145.5-36.8-192.6-80.6C48.6 356 17.3 304 2.5 268.3c-3.3-7.9-3.3-16.7 0-24.6C17.3 208 48.6 156 95.4 112.6zM288 336c44.2 0 80-35.8 80-80s-35.8-80-80-80c-.7 0-1.3 0-2 0c1.3 5.1 2 10.5 2 16c0 35.3-28.7 64-64 64c-5.5 0-10.9-.7-16-2c0 .7 0 1.3 0 2c0 44.2 35.8 80 80 80zm0-208a128 128 0 1 1 0 256 128 128 0 1 1 0-256z"]}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,n),i.exports}n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,{a:t}),t},n.d=function(e,t){for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nc=void 0;var r={};!function(){"use strict";n.r(r),n.d(r,{applyHooks:function(){return le},blockSettings:function(){return $},getExtensions:function(){return c},omit:function(){return x},registerBlockExtension:function(){return U},store:function(){return L},unregisterBlockExtension:function(){return Z}});var e={};n.r(e),n.d(e,{__experimentalRegisterBlockExtension:function(){return C},addBlockExtensions:function(){return S},removeBlockExtensions:function(){return _}});var t={};n.r(t),n.d(t,{getBlockExtension:function(){return j},getBlockExtensionBy:function(){return B},getBlockExtensionField:function(){return T},getBlockExtensionFields:function(){return M},getBlockExtensions:function(){return z},hasBlockExtensionField:function(){return R}});var a=window.wp.hooks,i=n(307),o={...JSON.parse('{"type":"extension","isOpen":true,"label":"Effects","name":"publisherEffects","props":{"publisherEffects":{"type":"object","default":{}}},"fields":{"Opacity":{"publisherCssGenerators":{}},"Transition":true},"cssGenerators":{},"editorProps":{"className":"publisher-effects-wrapper"}}'),Edit:e=>{let{children:t}=e;return(0,i.createElement)("div",null,t)},Save:e=>{let{element:t}=e;return t}},s={...JSON.parse('{"type":"extension","isOpen":true,"label":"Border and Shadow","name":"publisherBorderAndShadow","fields":{"BoxShadow":{"supports":{"shadow":false}}},"cssGenerators":{},"editorProps":{"className":"publisher-border-shadow-wrapper"}}'),Edit:e=>{let{children:t}=e;return(0,i.createElement)("div",null,t)},Save:e=>{let{element:t}=e;return t}};function c(){return(0,a.applyFilters)("publisher.core.extensions.extensions.list",[o,s])}var l=n(462),u=JSON.parse('{"type":"field","name":"Opacity","props":{"publisherOpacity":{"type":"integer","default":1}},"cssGenerators":{},"editorProps":{"className":"publisher-opacity"}}'),f=n(847),m=n(601),p={...u,publisherCssGenerators:{...u.publisherCssGenerators,...(0,m.W0)({getCssRules:()=>""},u.cssGenerators)},Edit:e=>{let{name:t,...n}=e;return(0,i.createElement)(i.Fragment,null,(0,i.createElement)(f.OpacityControl,(0,l.Z)({},n,{blockName:t})))},Save:e=>{let{blockType:t,attributes:n}=e;const{opacity:r}=n;if(!r)return null;const a=(0,m.Bv)(t,{attributes:n});return 0!==a?.trim()?.length&&(0,i.createElement)("style",{dangerouslySetInnerHTML:{__html:a}})}},d={getCssRules:(e,t,n)=>{var r;const{attributes:a}=t;if(!a?.publisherBoxShadowItems?.length)return"";const i=a?.publisherBoxShadowItems?.map((e=>e.isVisible?`${e.x} ${e.y} ${e.blur} ${e.spread} ${e.color} ${e.inset?"inset":""}`:null))?.filter((e=>null!==e));return`${(0,m.Xg)({selector:`.publisher-core.extension.publisher-extension-ref.client-id-${t.clientId}`,properties:{"box-shadow":i?.join(",")}})}\n${(0,m.Xg)({selector:`.publisher-box-shadow-wrapper${null!==(r=n.selector)&&void 0!==r?r:""}`,properties:{"box-shadow":i?.join(",")}})}`}},b=JSON.parse('{"type":"field","name":"BoxShadow","props":{"publisherBoxShadowItems":{"type":"array","default":[]}},"fields":{},"cssGenerators":{"publisherBoxShadowItems":[{"type":"function","function":"getCssRules","selector":" .wp-element-button"}]},"editorProps":{"className":"publisher-box-shadow-wrapper"},"saveProps":{"className":""}}'),v={...b,publisherCssGenerators:{...b.publisherCssGenerators,...(0,m.W0)(d,b.cssGenerators)},Edit:e=>{let{name:t,...n}=e;return(0,i.createElement)(f.BoxShadowControl,(0,l.Z)({},n,{blockName:t}))},Save:e=>{let{blockType:t,attributes:n}=e;const{publisherBoxShadowItems:r}=n;if(!r)return null;const a=(0,m.Bv)(t,{attributes:n});return 0!==a?.trim()?.length&&(0,i.createElement)("style",{dangerouslySetInnerHTML:{__html:a}})}},h=JSON.parse('{"type":"field","name":"Transition","props":{"publisherTransition":{"type":"array","default":[]}},"cssGenerators":{},"editorProps":{"className":"publisher-transition"}}'),g={...h,publisherCssGenerators:{...h.publisherCssGenerators,...(0,m.W0)({getCssRules:()=>""},h.cssGenerators)},Edit:e=>{let{name:t,...n}=e;return(0,i.createElement)(i.Fragment,null,(0,i.createElement)(f.TransitionControl,(0,l.Z)({},n,{blockName:t})))},Save:e=>{let{blockType:t,attributes:n}=e;const{opacity:r}=n;if(!r)return null;const a=(0,m.Bv)(t,{attributes:n});return 0!==a?.trim()?.length&&(0,i.createElement)("style",{dangerouslySetInnerHTML:{__html:a}})}};var y=window.wp.data;function x(e,t){return Object.fromEntries(Object.entries(e).filter((e=>{let[n]=e;return!t.includes(n)})))}const k=e=>{let{type:t}=e;return"block"===t},w=e=>{let{type:t}=e;return"field"===t},E=e=>{let{type:t}=e;return"extension"===t};var O=(0,y.combineReducers)({unprocessedBlockExtensions:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADD_UNPROCESSED_BLOCK_EXTENSION":return{...e,[t.blockExtension.name]:t.blockExtension};case"REMOVE_BLOCK_EXTENSIONS":return x(e,t.names)}return e},blockExtensions:function(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1?arguments[1]:void 0;switch(t.type){case"ADD_BLOCK_EXTENSIONS":return{...e,...(n=t.blockExtensions,n.reduce(((e,t)=>({...e,[t.name]:t})),{}))};case"REMOVE_BLOCK_EXTENSIONS":return x(e,t.names)}var n;return e}});function S(e){return{type:"ADD_BLOCK_EXTENSIONS",blockExtensions:Array.isArray(e)?e:[e]}}const C=e=>t=>{let{dispatch:n,select:r}=t;n({type:"ADD_UNPROCESSED_BLOCK_EXTENSION",blockExtension:e}),e&&n.addBlockExtensions(e)};function _(e){return{type:"REMOVE_BLOCK_EXTENSIONS",names:Array.isArray(e)?e:[e]}}var N=n(819),P={};function A(e){return[e]}function I(e,t,n){var r;if(e.length!==t.length)return!1;for(r=n;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}function j(e,t){return e.blockExtensions[t]}function B(e,t,n){return Object.entries(e.blockExtensions).map((e=>e[1][t]===n?e[1]:null)).filter((e=>null!==e))[0]}const z=function(e,t){var n,r=t||A;function a(){n=new WeakMap}function i(){var t,a,i,o,s,c=arguments.length;for(o=new Array(c),i=0;i<c;i++)o[i]=arguments[i];for(t=function(e){var t,r,a,i,o,s=n,c=!0;for(t=0;t<e.length;t++){if(!(o=r=e[t])||"object"!=typeof o){c=!1;break}s.has(r)?s=s.get(r):(a=new WeakMap,s.set(r,a),s=a)}return s.has(P)||((i=function(){var e={clear:function(){e.head=null}};return e}()).isUniqueByDependants=c,s.set(P,i)),s.get(P)}(s=r.apply(null,o)),t.isUniqueByDependants||(t.lastDependants&&!I(s,t.lastDependants,0)&&t.clear(),t.lastDependants=s),a=t.head;a;){if(I(a.args,o,1))return a!==t.head&&(a.prev.next=a.next,a.next&&(a.next.prev=a.prev),a.next=t.head,a.prev=null,t.head.prev=a,t.head=a),a.val;a=a.next}return a={val:e.apply(null,o)},o[0]=null,a.args=o,t.head&&(t.head.prev=a,a.next=t.head),t.head=a,a.val}return i.getDependants=r,i.clear=a,a(),i}((e=>Object.values(e.blockExtensions)),(e=>[e.blockExtensions]));function M(e,t){return e.blockExtensions[t]?.fields}const T=(e,t,n,r)=>{const a=D(e,t);return a?.fields?(0,N.get)(a.fields,n,r):r},D=(e,t)=>"string"==typeof t?j(e,t):t;function R(e,t,n,r){return!!T(e,t,n,r)}const F="publisher-core/extensions",L=(0,y.createReduxStore)(F,{reducer:O,selectors:t,actions:e});function U(e,t){let{type:n="block",...r}=t;if("string"!=typeof e)return void console.error("Block extension names must be strings.");if(!/^(publisher|[A-Z][a-z0-9-]).*(?:[A-Z][a-z0-9-])*$/.test(e))return void console.error('Block extension names must contain a namespace prefix, include only lowercase alphanumeric characters or dashes, and start with a letter. Example: "publisherMyCustomBlockExtension" or "MyCustomBlockExtension"');if((0,y.select)(L).getBlockExtension(e))return void console.error('Block extension "'+e+'" is already registered.');if(!["block","extension","field"].includes(n))return void console.error(`Block Extension type must be equals with "extension", "block" or "field" this type is ${n}, Block Extension type validation error!`);const a={name:e,type:n,label:"",props:{},icon:null,fields:{},isOpen:!1,saveProps:{},description:"",editorProps:{},targetBlock:null,cssGenerators:[],...r};return(0,y.dispatch)(L).__experimentalRegisterBlockExtension(a),(0,y.select)(L).getBlockExtension(e)}function Z(e){const t=(0,y.select)(L).getBlockExtension(e);if(t)return(0,y.dispatch)(L).removeBlockExtensions(e),t;console.error('Block extensions "'+e+'" is not registered.')}function Y(e){return!e||!Object.keys(e).length}(0,y.register)(L);var $={addSupports:function(e,t){return Y(e)||Y(t)?e:{...e,__experimentalPublisherDefaultControls:{...e.__experimentalPublisherDefaultControls||{},...t}}}},V=n(175),H=n(184),W=n.n(H);function G(e){return(0,y.useSelect)((t=>{const{getBlockExtensions:n,getBlockExtensionBy:r,hasBlockExtensionField:a}=t(F);return{extensions:n().filter((t=>{let{type:n,name:r}=t;return r!==e&&"extension"===n&&a(e,r)})),hasExtensionSupport:a,currentExtension:r("targetBlock",e),blockType:t("core/blocks").getBlockType(e)}}))}var X=function(e,t,n){const{getBlockExtensionBy:r}=(0,y.select)(F);if(!r("targetBlock",t?.name))return e;const{publisherSaveProps:a}=(0,y.select)("core/blocks").getBlockType(t?.name);return n?.publisherPropsId,function(e,t){for(const r in t){var n;if(!Object.hasOwnProperty.call(t,r))continue;const a=t[r];"className"!==r?e[r]?e={...e||{},[r]:{...null!==(n=e[r])&&void 0!==n?n:{},...a}}:e[r]=a:e={...e||{},className:W()(e?.className||"",a)}}return e}(e,a)},K=window.wp.compose;const q=(0,K.compose)((0,y.withSelect)((e=>{const t="core/block-editor";return{getBlocks:e(t).getBlocks,select:e,selected:e(t).getSelectedBlock()}}))),J=e=>null!==e&&e&&(e?.length||Object.values(e)?.length);var Q=(0,K.createHigherOrderComponent)((e=>q((t=>{let{select:n,...r}=t;const{currentExtension:a}=G(r?.name);if(!a)return(0,i.createElement)(e,r);(0,i.useEffect)((()=>{}),[r]);const{publisherEditorProps:o}=n("core/blocks").getBlockType(r?.name);if(!o)return(0,i.createElement)(e,r);const s=W()(Object.fromEntries(Object.entries(o).map((e=>"className"!==e[0]?null:e)).filter((e=>null!==e)))?.className),c={...(()=>{let e={};return Object.entries(o).forEach((t=>{var n;if((0,N.isObject)(t[1]))e={...e,[t[0]]:{...null!==(n=e[t[0]])&&void 0!==n?n:{},...t[1]}};else if((0,N.isArray)(t[1])){var r;e={...e,[t[0]]:[...null!==(r=e[t[0]])&&void 0!==r?r:[],...t[1]]}}else e={...e,[t[0]]:t[1]}})),delete e.className,e})()};return(0,i.createElement)(e,(0,l.Z)({},r,{className:s,wrapperProps:c}))}))),"withAllNeedsEditorProps"),ee=n(515),te=n(930);const ne=e=>{const t={...e};if(void 0===t.attributes.publisherPropsId){const e=new Date;t.attributes.publisherPropsId=""+e.getMonth()+e.getDate()+e.getHours()+e.getMinutes()+e.getSeconds()+e.getMilliseconds()}return t},re=e=>{const{publisherEdit:t}=(0,y.select)("core/blocks").getBlockType(e?.name),{BlockUI:{Edit:n},ExtensionUI:r,FieldUI:a}=t;return(0,i.createElement)(n,e,r.map(((t,n)=>{let{name:r,label:o,isOpen:s,Edit:c}=t;return(0,i.createElement)(te.InspectElement,{title:o,initialOpen:s,key:`${r}-${n}`},(0,i.createElement)(c,e,a.map(((t,a)=>{if(!t[r])return null;const o=t[r];return(0,i.createElement)(o,(0,l.Z)({key:`${r}-${n}-${a}`},e))}))))})))},ae=(0,K.createHigherOrderComponent)((e=>t=>{const{name:n}=t,{blockType:r,currentExtension:a}=G(n);if(!a)return(0,i.createElement)(e,t);const o=(0,i.useMemo)((()=>({...ne(t)})),[t]),s=(0,ee.extensionClassNames)({[o.className]:!0,[`publisher-client-id-${o.clientId}`]:!0}),c=(0,i.useRef)(),{Edit:u,sideEffect:f}=a,p=(0,m.Bv)(r,o);return(0,i.useEffect)((()=>{"function"==typeof f&&f(c,o)}),[c,o,f]),(0,i.createElement)(i.Fragment,null,(0,i.createElement)(V.BlockControls,{group:"block",__experimentalShareWithChildBlocks:!0},function(){const{isSelected:e,clientId:t,name:n}=(0,V.useBlockEditContext)();return(0,y.useSelect)((r=>{if(e)return!0;const{getBlockName:a,isFirstMultiSelectedBlock:i,getMultiSelectedBlockClientIds:o}=r("core/block-editor");return!!i(t)&&o().every((e=>a(e)===n))}),[t,e,n])}()&&(0,i.createElement)(i.Fragment,null,(0,i.createElement)(re,o),"function"==typeof u&&(0,i.createElement)(u,(0,l.Z)({},o,{name:n})))),(0,i.createElement)(e,(0,l.Z)({},o,{className:s})),0!==p?.length&&(0,i.createElement)("style",{dangerouslySetInnerHTML:{__html:p}}))}),"withAllNeedsControls");var ie=ae;function oe(e,t){const{getBlockExtension:n,getBlockExtensionBy:r,hasBlockExtensionField:a}=(0,y.select)(F),i=r("targetBlock",t);if(!i||!k(i))return e;const o=e=>(0,N.isObject)(e[1])||(0,N.isArray)(e[1])||e[1]?n(e[0]):null,s=Object.entries(i.fields).map(o).filter(J).filter((e=>{let{name:t,...n}=e;return E(n)&&a(i?.name,t)})),c=Object.keys(i.fields).map((e=>Object.entries(i.fields[e]).map(o).filter(J))).filter(J).flat();return c.forEach((t=>{const n=s.filter((e=>e.fields[t.name]))[0];n?.fields&&n?.fields[t.name]&&!(0,N.isBoolean)(n?.fields[t.name])&&(t={...t,...n.fields[t.name]}),i.fields[n?.name]&&i.fields[n?.name][t.name]&&!(0,N.isBoolean)(i.fields[n?.name][t.name])&&(t={...t,...i.fields[n.name][t.name]}),e=se(e,t)})),s.forEach((t=>e=se(e,t))),se(e,i,{fields:c,extensions:s})}function se(e,t,n){const{fields:r,extensions:a}=n||{};function i(e,t){return e[t]?Object.fromEntries(Object.entries(e[t]).map((e=>e))):{}}const o=w(t)?i(t,"supports"):{},s=E(t)?i(t,"fields"):{},c=(e,t)=>{const n=a.filter((t=>t.fields[e.name]))[0];return n?.fields&&n?.fields[e.name]?e[t]?{[n.name]:e[t]}:(console.error(`Extension UI for: "${t}" was not exists!`),[]):[]},l=E(t)?t:null,u=k(t)?t:null;return{...e,attributes:{...e.attributes,...t.props},supports:{...e.supports,...o,__experimentalPublisherDefaultControls:{...e.supports&&e.supports.__experimentalPublisherDefaultControls||{},...s}},publisherEdit:{...e.publisherEdit||{},BlockUI:u,FieldUI:[...e.publisherEdit?.FieldUI||[],r?r.map((e=>c(e,"Edit"))).filter(J):[]].filter(J).flat(),ExtensionUI:[...e.publisherEdit?.ExtensionUI||[],l].filter(J)},publisherSave:{...e.publisherSave||{},BlockUI:u,FieldUI:[...e.publisherSave?.FieldUI||[],r?r.map((e=>c(e,"Save"))).filter(J):[]].filter(J).flat(),ExtensionUI:[...e.publisherSave?.ExtensionUI||[],l].filter(J)},publisherEditorProps:{...e.publisherEditorProps||{},...t.editorProps},publisherSaveProps:{...e.publisherSaveProps||{},...t.saveProps},publisherCssGenerators:{...t.cssGenerators,...e?.publisherCssGenerators||{}}}}var ce=(e,t,n)=>{const{getBlockExtensionBy:r}=(0,y.select)(F);if(!r("targetBlock",t?.name))return e;const{publisherSave:a}=(0,y.select)("core/blocks").getBlockType(t?.name),{BlockUI:{Save:o},ExtensionUI:s,FieldUI:c}=a,l=o({element:s.map(((e,r)=>{let{name:a,Save:o}=e;return(0,i.createElement)(o,{element:c.map(((e,o)=>{if(!e[a])return null;const s=e[a];return(0,i.createElement)(s,{blockType:t,attributes:n,key:`${a}-${r}-${o}`})})),key:`${a}-${r}`})}))}).flat().filter(J);return(0,i.createElement)(i.Fragment,null,e,l)};function le(){(0,a.addFilter)("blocks.registerBlockType","publisher/core/extensions/withAdvancedControlsAttributes",oe),(0,a.addFilter)("editor.BlockEdit","publisher/core/extensions/withAdvancedBlockEditControls",ie),(0,a.addFilter)("editor.BlockListBlock","publisher/core/extensions/withAppliedEditorProps",Q),(0,a.addFilter)("blocks.getSaveContent.extraProps","publisher/core/extensions/withAppliedExtraSaveProps",X),(0,a.addFilter)("blocks.getSaveElement","publisher/core/extensions/withAppliedCustomizeSaveElement",ce)}const ue=e=>{let{name:t,...n}=e;return U(t,n)};c().forEach(ue),(0,a.applyFilters)("publisher.core.fields.extensions.list",[v,p,g]).forEach(ue)}(),(publisher=void 0===publisher?{}:publisher).extensions=r}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,