name: 'Setup PHP and Install Composer Dependencies'
description: 'Composer Install while managing all aspects of caching.'
inputs:
    php-version:
        description: 'Optional. The PHP version to use. When not specified, the version is 7.4'
        required: false
        default: '7.4'
    composer-options:
        description: 'Optional. The options to use on composer install. When not specified, the options is empty'
        required: false
        default: ''

runs:
    using: 'composite'
    steps:
        ##
        # This allows Composer dependencies to be installed using a single step.
        #
        # Since the tests are currently run within the Docker containers where the PHP version varies,
        # the same PHP version needs to be configured for the action runner machine so that the correct
        # dependency versions are installed and cached.
        ##
        - name: Set up PHP
          uses: shivammathur/setup-php@v2
          with:
              php-version: '${{ inputs.php-version }}'
              ini-file: development
              coverage: none
              ini-values: memory_limit=128M, max_execution_time=30, max_input_time=60, max_input_vars=1000

        # Ensure that Composer installs the correct versions of packages.
        - name: Override PHP version in composer.json
          run: composer config platform.php ${{ inputs.php-version }}
          shell: bash

        # Since Composer dependencies are installed using `composer update` and no lock file is in version control,
        # passing a custom cache suffix ensures that the cache is flushed at least once per week.
        - name: Install Composer dependencies
          uses: ramsey/composer-install@v2
          with:
              custom-cache-suffix: $(/bin/date -u --date='last Mon' "+%F")
              composer-options: '${{ inputs.composer-options }}'
