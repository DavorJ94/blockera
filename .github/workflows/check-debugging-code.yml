name: Check for Debugging Code

on:
    pull_request:
        types: [opened, synchronize, ready_for_review]

jobs:
    check-debugging:
        name: Check for Debugging Code
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Initialize Error Collection
              run: |
                  echo "FINAL_EXIT_CODE=0" >> $GITHUB_ENV

            - name: Check for PHP Debugging Code
              id: php-check
              continue-on-error: true
              run: |
                  # Check for PHP debugging patterns, excluding lines with @debug-ignore comment
                  FOUND_ERRORS=0
                  while IFS= read -r file; do
                    # Skip test files
                    if [[ "$file" == *"tests/"* ]]; then
                      continue
                    fi
                    
                    # Get all lines with debugging code
                    while IFS= read -r line; do
                      # Check if line has @debug-ignore comment
                      if ! grep -A1 -B1 "$line" "$file" | grep -q "@debug-ignore"; then
                        # Get line number
                        line_number=$(grep -n "$line" "$file" | cut -d: -f1)
                        # Get context (3 lines before and after)
                        context=$(sed -n "$((line_number-3)),$((line_number+3))p" "$file")
                        
                        echo "::error file=$file,line=$line_number::Found PHP debugging code without @debug-ignore comment"
                        echo "Context:"
                        echo "$context"
                        echo "----------------------------------------"
                        FOUND_ERRORS=1
                      fi
                    done < <(grep -E "(die\(|var_dump\(|print_r\(|error_log\(|wp_die\(|exit\()" "$file" || true)
                  done < <(find . -type f -name "*.php")

                  if [ $FOUND_ERRORS -eq 1 ]; then
                    echo "FINAL_EXIT_CODE=1" >> $GITHUB_ENV
                  fi

            - name: Check for JavaScript Debugging Code
              id: js-check
              continue-on-error: true
              run: |
                  # Check for JavaScript debugging patterns, excluding lines with @debug-ignore comment
                  FOUND_ERRORS=0
                  while IFS= read -r file; do
                    # Skip test files
                    if [[ "$file" == *"tests/"* ]]; then
                      continue
                    fi
                    
                    # Get all lines with debugging code
                    while IFS= read -r line; do
                      # Check if line has @debug-ignore comment
                      if ! grep -A1 -B1 "$line" "$file" | grep -q "@debug-ignore"; then
                        # Get line number
                        line_number=$(grep -n "$line" "$file" | cut -d: -f1)
                        # Get context (3 lines before and after)
                        context=$(sed -n "$((line_number-3)),$((line_number+3))p" "$file")
                        
                        echo "::error file=$file,line=$line_number::Found JavaScript debugging code without @debug-ignore comment"
                        echo "Context:"
                        echo "$context"
                        echo "----------------------------------------"
                        FOUND_ERRORS=1
                      fi
                    done < <(grep -E "(console\.(log|debug|info|warn|error)|debugger|alert\()" "$file" || true)
                  done < <(find . -type f \( -name "*.js" -o -name "*.jsx" -o -name "*.ts" -o -name "*.tsx" \))

                  if [ $FOUND_ERRORS -eq 1 ]; then
                    echo "FINAL_EXIT_CODE=1" >> $GITHUB_ENV
                  fi

            - name: Check for Skip/Only in Tests
              id: test-check
              continue-on-error: true
              run: |
                  # Check for .skip or .only in test files, excluding lines with @debug-ignore comment
                  FOUND_ERRORS=0
                  while IFS= read -r file; do
                    # Skip test files
                    if [[ "$file" == *"tests/"* ]]; then
                      continue
                    fi
                    
                    # Get all lines with skip/only
                    while IFS= read -r line; do
                      # Check if line has @debug-ignore comment
                      if ! grep -A1 -B1 "$line" "$file" | grep -q "@debug-ignore"; then
                        # Get line number
                        line_number=$(grep -n "$line" "$file" | cut -d: -f1)
                        # Get context (3 lines before and after)
                        context=$(sed -n "$((line_number-3)),$((line_number+3))p" "$file")
                        
                        echo "::error file=$file,line=$line_number::Found .skip or .only without @debug-ignore comment"
                        echo "Context:"
                        echo "$context"
                        echo "----------------------------------------"
                        FOUND_ERRORS=1
                      fi
                    done < <(grep -E "\.(skip|only)\(" "$file" || true)
                  done < <(find . -type f -name "*.test.*")

                  if [ $FOUND_ERRORS -eq 1 ]; then
                    echo "FINAL_EXIT_CODE=1" >> $GITHUB_ENV
                  fi

            - name: Final Status Check
              run: |
                  exit ${{ env.FINAL_EXIT_CODE }}
