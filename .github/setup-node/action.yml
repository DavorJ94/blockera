name: 'Setup Node.js and install npm dependencies'
description: 'Configures Node.js, uses optimal caching, and installs deps efficiently.'
inputs:
    node-version:
        description: 'Node.js version to use (optional, fallback to .nvmrc)'
        required: false

runs:
    using: 'composite'
    steps:
        - name: Setup Node.js with built-in npm cache
          uses: actions/setup-node@v3
          with:
              node-version-file: '.nvmrc'
              node-version: ${{ inputs.node-version }}
              cache: 'npm' # Caches ~/.npm

        - name: Output Node and npm versions
          shell: bash
          run: |
              echo "✅ Node version: $(node -v)"
              echo "✅ npm version: $(npm -v)"

        # ✅ Lockfile sync check (fast and accurate)
        - name: Validate lockfile is in sync
          shell: bash
          run: |
              cp package-lock.json package-lock.json.bak
              npm install --package-lock-only --legacy-peer-deps --no-audit --prefer-offline --ignore-scripts
              if ! cmp -s package-lock.json package-lock.json.bak; then
                echo "❌ ERROR: package-lock.json is out of sync with package.json"
                exit 1
              fi
              echo "✅ Lockfile is in sync"

        - name: Install npm dependencies
          shell: bash
          run: |
              echo "⚡ Installing dependencies using npm ci"
              npm ci --legacy-peer-deps --prefer-offline --no-audit
